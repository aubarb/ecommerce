{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isStrongPassword;\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar upperCaseRegex = /^[A-Z]$/;\nvar lowerCaseRegex = /^[a-z]$/;\nvar numberRegex = /^[0-9]$/;\nvar symbolRegex = /^[-#!$@%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/ ]$/;\nvar defaultOptions = {\n  minLength: 8,\n  minLowercase: 1,\n  minUppercase: 1,\n  minNumbers: 1,\n  minSymbols: 1,\n  returnScore: false,\n  pointsPerUnique: 1,\n  pointsPerRepeat: 0.5,\n  pointsForContainingLower: 10,\n  pointsForContainingUpper: 10,\n  pointsForContainingNumber: 10,\n  pointsForContainingSymbol: 10\n};\n/* Counts number of occurrences of each char in a string\n * could be moved to util/ ?\n*/\n\nfunction countChars(str) {\n  var result = {};\n  Array.from(str).forEach(function (char) {\n    var curVal = result[char];\n\n    if (curVal) {\n      result[char] += 1;\n    } else {\n      result[char] = 1;\n    }\n  });\n  return result;\n}\n/* Return information about a password */\n\n\nfunction analyzePassword(password) {\n  var charMap = countChars(password);\n  var analysis = {\n    length: password.length,\n    uniqueChars: Object.keys(charMap).length,\n    uppercaseCount: 0,\n    lowercaseCount: 0,\n    numberCount: 0,\n    symbolCount: 0\n  };\n  Object.keys(charMap).forEach(function (char) {\n    /* istanbul ignore else */\n    if (upperCaseRegex.test(char)) {\n      analysis.uppercaseCount += charMap[char];\n    } else if (lowerCaseRegex.test(char)) {\n      analysis.lowercaseCount += charMap[char];\n    } else if (numberRegex.test(char)) {\n      analysis.numberCount += charMap[char];\n    } else if (symbolRegex.test(char)) {\n      analysis.symbolCount += charMap[char];\n    }\n  });\n  return analysis;\n}\n\nfunction scorePassword(analysis, scoringOptions) {\n  var points = 0;\n  points += analysis.uniqueChars * scoringOptions.pointsPerUnique;\n  points += (analysis.length - analysis.uniqueChars) * scoringOptions.pointsPerRepeat;\n\n  if (analysis.lowercaseCount > 0) {\n    points += scoringOptions.pointsForContainingLower;\n  }\n\n  if (analysis.uppercaseCount > 0) {\n    points += scoringOptions.pointsForContainingUpper;\n  }\n\n  if (analysis.numberCount > 0) {\n    points += scoringOptions.pointsForContainingNumber;\n  }\n\n  if (analysis.symbolCount > 0) {\n    points += scoringOptions.pointsForContainingSymbol;\n  }\n\n  return points;\n}\n\nfunction isStrongPassword(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  (0, _assertString.default)(str);\n  var analysis = analyzePassword(str);\n  options = (0, _merge.default)(options || {}, defaultOptions);\n\n  if (options.returnScore) {\n    return scorePassword(analysis, options);\n  }\n\n  return analysis.length >= options.minLength && analysis.lowercaseCount >= options.minLowercase && analysis.uppercaseCount >= options.minUppercase && analysis.numberCount >= options.minNumbers && analysis.symbolCount >= options.minSymbols;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","isStrongPassword","_merge","_interopRequireDefault","require","_assertString","obj","__esModule","upperCaseRegex","lowerCaseRegex","numberRegex","symbolRegex","defaultOptions","minLength","minLowercase","minUppercase","minNumbers","minSymbols","returnScore","pointsPerUnique","pointsPerRepeat","pointsForContainingLower","pointsForContainingUpper","pointsForContainingNumber","pointsForContainingSymbol","countChars","str","result","Array","from","forEach","char","curVal","analyzePassword","password","charMap","analysis","length","uniqueChars","keys","uppercaseCount","lowercaseCount","numberCount","symbolCount","test","scorePassword","scoringOptions","points","options","arguments","undefined","module"],"sources":["/Users/aurele/node_modules/validator/lib/isStrongPassword.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isStrongPassword;\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar upperCaseRegex = /^[A-Z]$/;\nvar lowerCaseRegex = /^[a-z]$/;\nvar numberRegex = /^[0-9]$/;\nvar symbolRegex = /^[-#!$@%^&*()_+|~=`{}\\[\\]:\";'<>?,.\\/ ]$/;\nvar defaultOptions = {\n  minLength: 8,\n  minLowercase: 1,\n  minUppercase: 1,\n  minNumbers: 1,\n  minSymbols: 1,\n  returnScore: false,\n  pointsPerUnique: 1,\n  pointsPerRepeat: 0.5,\n  pointsForContainingLower: 10,\n  pointsForContainingUpper: 10,\n  pointsForContainingNumber: 10,\n  pointsForContainingSymbol: 10\n};\n/* Counts number of occurrences of each char in a string\n * could be moved to util/ ?\n*/\n\nfunction countChars(str) {\n  var result = {};\n  Array.from(str).forEach(function (char) {\n    var curVal = result[char];\n\n    if (curVal) {\n      result[char] += 1;\n    } else {\n      result[char] = 1;\n    }\n  });\n  return result;\n}\n/* Return information about a password */\n\n\nfunction analyzePassword(password) {\n  var charMap = countChars(password);\n  var analysis = {\n    length: password.length,\n    uniqueChars: Object.keys(charMap).length,\n    uppercaseCount: 0,\n    lowercaseCount: 0,\n    numberCount: 0,\n    symbolCount: 0\n  };\n  Object.keys(charMap).forEach(function (char) {\n    /* istanbul ignore else */\n    if (upperCaseRegex.test(char)) {\n      analysis.uppercaseCount += charMap[char];\n    } else if (lowerCaseRegex.test(char)) {\n      analysis.lowercaseCount += charMap[char];\n    } else if (numberRegex.test(char)) {\n      analysis.numberCount += charMap[char];\n    } else if (symbolRegex.test(char)) {\n      analysis.symbolCount += charMap[char];\n    }\n  });\n  return analysis;\n}\n\nfunction scorePassword(analysis, scoringOptions) {\n  var points = 0;\n  points += analysis.uniqueChars * scoringOptions.pointsPerUnique;\n  points += (analysis.length - analysis.uniqueChars) * scoringOptions.pointsPerRepeat;\n\n  if (analysis.lowercaseCount > 0) {\n    points += scoringOptions.pointsForContainingLower;\n  }\n\n  if (analysis.uppercaseCount > 0) {\n    points += scoringOptions.pointsForContainingUpper;\n  }\n\n  if (analysis.numberCount > 0) {\n    points += scoringOptions.pointsForContainingNumber;\n  }\n\n  if (analysis.symbolCount > 0) {\n    points += scoringOptions.pointsForContainingSymbol;\n  }\n\n  return points;\n}\n\nfunction isStrongPassword(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  (0, _assertString.default)(str);\n  var analysis = analyzePassword(str);\n  options = (0, _merge.default)(options || {}, defaultOptions);\n\n  if (options.returnScore) {\n    return scorePassword(analysis, options);\n  }\n\n  return analysis.length >= options.minLength && analysis.lowercaseCount >= options.minLowercase && analysis.uppercaseCount >= options.minUppercase && analysis.numberCount >= options.minNumbers && analysis.symbolCount >= options.minSymbols;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}