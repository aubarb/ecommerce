{"ast":null,"code":"\"use strict\";\n\nconst _ = require(\"lodash\");\n\nconst AbstractDialect = require(\"../abstract\");\n\nconst ConnectionManager = require(\"./connection-manager\");\n\nconst Query = require(\"./query\");\n\nconst QueryGenerator = require(\"./query-generator\");\n\nconst {\n  MySQLQueryInterface\n} = require(\"../mysql/query-interface\");\n\nconst DataTypes = require(\"../../data-types\").mariadb;\n\nclass MariadbDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.queryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n    this.queryInterface = new MySQLQueryInterface(sequelize, this.queryGenerator);\n  }\n\n  canBackslashEscape() {\n    return true;\n  }\n\n}\n\nMariadbDialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  \"VALUES ()\": true,\n  \"LIMIT ON UPDATE\": true,\n  lock: true,\n  forShare: \"LOCK IN SHARE MODE\",\n  settingIsolationLevelDuringTransaction: false,\n  schemas: true,\n  inserts: {\n    ignoreDuplicates: \" IGNORE\",\n    updateOnDuplicate: \" ON DUPLICATE KEY UPDATE\"\n  },\n  index: {\n    collate: false,\n    length: true,\n    parser: true,\n    type: true,\n    using: 1\n  },\n  constraints: {\n    dropConstraint: false,\n    check: false\n  },\n  indexViaAlter: true,\n  indexHints: true,\n  NUMERIC: true,\n  GEOMETRY: true,\n  JSON: true,\n  REGEXP: true\n});\nMariadbDialect.prototype.defaultVersion = \"10.1.44\";\nMariadbDialect.prototype.Query = Query;\nMariadbDialect.prototype.QueryGenerator = QueryGenerator;\nMariadbDialect.prototype.DataTypes = DataTypes;\nMariadbDialect.prototype.name = \"mariadb\";\nMariadbDialect.prototype.TICK_CHAR = \"`\";\nMariadbDialect.prototype.TICK_CHAR_LEFT = MariadbDialect.prototype.TICK_CHAR;\nMariadbDialect.prototype.TICK_CHAR_RIGHT = MariadbDialect.prototype.TICK_CHAR;\nmodule.exports = MariadbDialect;","map":{"version":3,"mappings":";;AAEA,MAAMA,IAAIC,QAAQ,QAAR,CAAV;;AACA,MAAMC,kBAAkBD,QAAQ,aAAR,CAAxB;;AACA,MAAME,oBAAoBF,QAAQ,sBAAR,CAA1B;;AACA,MAAMG,QAAQH,QAAQ,SAAR,CAAd;;AACA,MAAMI,iBAAiBJ,QAAQ,mBAAR,CAAvB;;AACA,MAAM;EAAEK;AAAF,IAA0BL,QAAQ,0BAAR,CAAhC;;AACA,MAAMM,YAAYN,QAAQ,kBAAR,EAA4BO,OAA9C;;AAEA,6BAA6BN,eAA7B,CAA6C;EAC3CO,YAAYC,SAAZ,EAAuB;IACrB;IACA,KAAKA,SAAL,GAAiBA,SAAjB;IACA,KAAKC,iBAAL,GAAyB,IAAIR,iBAAJ,CAAsB,IAAtB,EAA4BO,SAA5B,CAAzB;IACA,KAAKE,cAAL,GAAsB,IAAIP,cAAJ,CAAmB;MACvCQ,UAAU,IAD6B;MAEvCH;IAFuC,CAAnB,CAAtB;IAIA,KAAKI,cAAL,GAAsB,IAAIR,mBAAJ,CACpBI,SADoB,EAEpB,KAAKE,cAFe,CAAtB;EAEO;;EAITG,qBAAqB;IACnB,OAAO,IAAP;EAAO;;AAhBkC;;AAoB7CC,eAAeC,SAAf,CAAyBC,QAAzB,GAAoClB,EAAEmB,KAAF,CAClCnB,EAAEoB,SAAF,CAAYlB,gBAAgBe,SAAhB,CAA0BC,QAAtC,CADkC,EAElC;EACE,aAAa,IADf;EAEE,mBAAmB,IAFrB;EAGEG,MAAM,IAHR;EAIEC,UAAU,oBAJZ;EAKEC,wCAAwC,KAL1C;EAMEC,SAAS,IANX;EAOEC,SAAS;IACPC,kBAAkB,SADX;IAEPC,mBAAmB;EAFZ,CAPX;EAWEC,OAAO;IACLC,SAAS,KADJ;IAELC,QAAQ,IAFH;IAGLC,QAAQ,IAHH;IAILC,MAAM,IAJD;IAKLC,OAAO;EALF,CAXT;EAkBEC,aAAa;IACXC,gBAAgB,KADL;IAEXC,OAAO;EAFI,CAlBf;EAsBEC,eAAe,IAtBjB;EAuBEC,YAAY,IAvBd;EAwBEC,SAAS,IAxBX;EAyBEC,UAAU,IAzBZ;EA0BEC,MAAM,IA1BR;EA2BEC,QAAQ;AA3BV,CAFkC,CAApC;AAiCA1B,eAAeC,SAAf,CAAyB0B,cAAzB,GAA0C,SAA1C;AACA3B,eAAeC,SAAf,CAAyBb,KAAzB,GAAiCA,KAAjC;AACAY,eAAeC,SAAf,CAAyBZ,cAAzB,GAA0CA,cAA1C;AACAW,eAAeC,SAAf,CAAyBV,SAAzB,GAAqCA,SAArC;AACAS,eAAeC,SAAf,CAAyB2B,IAAzB,GAAgC,SAAhC;AACA5B,eAAeC,SAAf,CAAyB4B,SAAzB,GAAqC,GAArC;AACA7B,eAAeC,SAAf,CAAyB6B,cAAzB,GAA0C9B,eAAeC,SAAf,CAAyB4B,SAAnE;AACA7B,eAAeC,SAAf,CAAyB8B,eAAzB,GAA2C/B,eAAeC,SAAf,CAAyB4B,SAApE;AAEAG,OAAOC,OAAP,GAAiBjC,cAAjB","names":["_","require","AbstractDialect","ConnectionManager","Query","QueryGenerator","MySQLQueryInterface","DataTypes","mariadb","constructor","sequelize","connectionManager","queryGenerator","_dialect","queryInterface","canBackslashEscape","MariadbDialect","prototype","supports","merge","cloneDeep","lock","forShare","settingIsolationLevelDuringTransaction","schemas","inserts","ignoreDuplicates","updateOnDuplicate","index","collate","length","parser","type","using","constraints","dropConstraint","check","indexViaAlter","indexHints","NUMERIC","GEOMETRY","JSON","REGEXP","defaultVersion","name","TICK_CHAR","TICK_CHAR_LEFT","TICK_CHAR_RIGHT","module","exports"],"sources":["/Users/aurele/node_modules/sequelize/src/dialects/mariadb/index.js"],"sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst AbstractDialect = require('../abstract');\nconst ConnectionManager = require('./connection-manager');\nconst Query = require('./query');\nconst QueryGenerator = require('./query-generator');\nconst { MySQLQueryInterface } = require('../mysql/query-interface');\nconst DataTypes = require('../../data-types').mariadb;\n\nclass MariadbDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.queryGenerator = new QueryGenerator({\n      _dialect: this,\n      sequelize\n    });\n    this.queryInterface = new MySQLQueryInterface(\n      sequelize,\n      this.queryGenerator\n    );\n  }\n\n  canBackslashEscape() {\n    return true;\n  }\n}\n\nMariadbDialect.prototype.supports = _.merge(\n  _.cloneDeep(AbstractDialect.prototype.supports),\n  {\n    'VALUES ()': true,\n    'LIMIT ON UPDATE': true,\n    lock: true,\n    forShare: 'LOCK IN SHARE MODE',\n    settingIsolationLevelDuringTransaction: false,\n    schemas: true,\n    inserts: {\n      ignoreDuplicates: ' IGNORE',\n      updateOnDuplicate: ' ON DUPLICATE KEY UPDATE'\n    },\n    index: {\n      collate: false,\n      length: true,\n      parser: true,\n      type: true,\n      using: 1\n    },\n    constraints: {\n      dropConstraint: false,\n      check: false\n    },\n    indexViaAlter: true,\n    indexHints: true,\n    NUMERIC: true,\n    GEOMETRY: true,\n    JSON: true,\n    REGEXP: true\n  }\n);\n\nMariadbDialect.prototype.defaultVersion = '10.1.44'; // minimum supported version\nMariadbDialect.prototype.Query = Query;\nMariadbDialect.prototype.QueryGenerator = QueryGenerator;\nMariadbDialect.prototype.DataTypes = DataTypes;\nMariadbDialect.prototype.name = 'mariadb';\nMariadbDialect.prototype.TICK_CHAR = '`';\nMariadbDialect.prototype.TICK_CHAR_LEFT = MariadbDialect.prototype.TICK_CHAR;\nMariadbDialect.prototype.TICK_CHAR_RIGHT = MariadbDialect.prototype.TICK_CHAR;\n\nmodule.exports = MariadbDialect;\n"]},"metadata":{},"sourceType":"script"}