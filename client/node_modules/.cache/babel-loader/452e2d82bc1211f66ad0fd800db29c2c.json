{"ast":null,"code":"module.exports = exports = abbrev.abbrev = abbrev;\nabbrev.monkeyPatch = monkeyPatch;\n\nfunction monkeyPatch() {\n  Object.defineProperty(Array.prototype, 'abbrev', {\n    value: function () {\n      return abbrev(this);\n    },\n    enumerable: false,\n    configurable: true,\n    writable: true\n  });\n  Object.defineProperty(Object.prototype, 'abbrev', {\n    value: function () {\n      return abbrev(Object.keys(this));\n    },\n    enumerable: false,\n    configurable: true,\n    writable: true\n  });\n}\n\nfunction abbrev(list) {\n  if (arguments.length !== 1 || !Array.isArray(list)) {\n    list = Array.prototype.slice.call(arguments, 0);\n  }\n\n  for (var i = 0, l = list.length, args = []; i < l; i++) {\n    args[i] = typeof list[i] === \"string\" ? list[i] : String(list[i]);\n  } // sort them lexicographically, so that they're next to their nearest kin\n\n\n  args = args.sort(lexSort); // walk through each, seeing how much it has in common with the next and previous\n\n  var abbrevs = {},\n      prev = \"\";\n\n  for (var i = 0, l = args.length; i < l; i++) {\n    var current = args[i],\n        next = args[i + 1] || \"\",\n        nextMatches = true,\n        prevMatches = true;\n    if (current === next) continue;\n\n    for (var j = 0, cl = current.length; j < cl; j++) {\n      var curChar = current.charAt(j);\n      nextMatches = nextMatches && curChar === next.charAt(j);\n      prevMatches = prevMatches && curChar === prev.charAt(j);\n\n      if (!nextMatches && !prevMatches) {\n        j++;\n        break;\n      }\n    }\n\n    prev = current;\n\n    if (j === cl) {\n      abbrevs[current] = current;\n      continue;\n    }\n\n    for (var a = current.substr(0, j); j <= cl; j++) {\n      abbrevs[a] = current;\n      a += current.charAt(j);\n    }\n  }\n\n  return abbrevs;\n}\n\nfunction lexSort(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1;\n}","map":{"version":3,"names":["module","exports","abbrev","monkeyPatch","Object","defineProperty","Array","prototype","value","enumerable","configurable","writable","keys","list","arguments","length","isArray","slice","call","i","l","args","String","sort","lexSort","abbrevs","prev","current","next","nextMatches","prevMatches","j","cl","curChar","charAt","a","substr","b"],"sources":["/Users/aurele/Desktop/E-Commerce App/views/node_modules/abbrev/abbrev.js"],"sourcesContent":["module.exports = exports = abbrev.abbrev = abbrev\n\nabbrev.monkeyPatch = monkeyPatch\n\nfunction monkeyPatch () {\n  Object.defineProperty(Array.prototype, 'abbrev', {\n    value: function () { return abbrev(this) },\n    enumerable: false, configurable: true, writable: true\n  })\n\n  Object.defineProperty(Object.prototype, 'abbrev', {\n    value: function () { return abbrev(Object.keys(this)) },\n    enumerable: false, configurable: true, writable: true\n  })\n}\n\nfunction abbrev (list) {\n  if (arguments.length !== 1 || !Array.isArray(list)) {\n    list = Array.prototype.slice.call(arguments, 0)\n  }\n  for (var i = 0, l = list.length, args = [] ; i < l ; i ++) {\n    args[i] = typeof list[i] === \"string\" ? list[i] : String(list[i])\n  }\n\n  // sort them lexicographically, so that they're next to their nearest kin\n  args = args.sort(lexSort)\n\n  // walk through each, seeing how much it has in common with the next and previous\n  var abbrevs = {}\n    , prev = \"\"\n  for (var i = 0, l = args.length ; i < l ; i ++) {\n    var current = args[i]\n      , next = args[i + 1] || \"\"\n      , nextMatches = true\n      , prevMatches = true\n    if (current === next) continue\n    for (var j = 0, cl = current.length ; j < cl ; j ++) {\n      var curChar = current.charAt(j)\n      nextMatches = nextMatches && curChar === next.charAt(j)\n      prevMatches = prevMatches && curChar === prev.charAt(j)\n      if (!nextMatches && !prevMatches) {\n        j ++\n        break\n      }\n    }\n    prev = current\n    if (j === cl) {\n      abbrevs[current] = current\n      continue\n    }\n    for (var a = current.substr(0, j) ; j <= cl ; j ++) {\n      abbrevs[a] = current\n      a += current.charAt(j)\n    }\n  }\n  return abbrevs\n}\n\nfunction lexSort (a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAGC,MAAM,CAACA,MAAP,GAAgBA,MAA3C;AAEAA,MAAM,CAACC,WAAP,GAAqBA,WAArB;;AAEA,SAASA,WAAT,GAAwB;EACtBC,MAAM,CAACC,cAAP,CAAsBC,KAAK,CAACC,SAA5B,EAAuC,QAAvC,EAAiD;IAC/CC,KAAK,EAAE,YAAY;MAAE,OAAON,MAAM,CAAC,IAAD,CAAb;IAAqB,CADK;IAE/CO,UAAU,EAAE,KAFmC;IAE5BC,YAAY,EAAE,IAFc;IAERC,QAAQ,EAAE;EAFF,CAAjD;EAKAP,MAAM,CAACC,cAAP,CAAsBD,MAAM,CAACG,SAA7B,EAAwC,QAAxC,EAAkD;IAChDC,KAAK,EAAE,YAAY;MAAE,OAAON,MAAM,CAACE,MAAM,CAACQ,IAAP,CAAY,IAAZ,CAAD,CAAb;IAAkC,CADP;IAEhDH,UAAU,EAAE,KAFoC;IAE7BC,YAAY,EAAE,IAFe;IAETC,QAAQ,EAAE;EAFD,CAAlD;AAID;;AAED,SAAST,MAAT,CAAiBW,IAAjB,EAAuB;EACrB,IAAIC,SAAS,CAACC,MAAV,KAAqB,CAArB,IAA0B,CAACT,KAAK,CAACU,OAAN,CAAcH,IAAd,CAA/B,EAAoD;IAClDA,IAAI,GAAGP,KAAK,CAACC,SAAN,CAAgBU,KAAhB,CAAsBC,IAAtB,CAA2BJ,SAA3B,EAAsC,CAAtC,CAAP;EACD;;EACD,KAAK,IAAIK,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGP,IAAI,CAACE,MAApB,EAA4BM,IAAI,GAAG,EAAxC,EAA6CF,CAAC,GAAGC,CAAjD,EAAqDD,CAAC,EAAtD,EAA2D;IACzDE,IAAI,CAACF,CAAD,CAAJ,GAAU,OAAON,IAAI,CAACM,CAAD,CAAX,KAAmB,QAAnB,GAA8BN,IAAI,CAACM,CAAD,CAAlC,GAAwCG,MAAM,CAACT,IAAI,CAACM,CAAD,CAAL,CAAxD;EACD,CANoB,CAQrB;;;EACAE,IAAI,GAAGA,IAAI,CAACE,IAAL,CAAUC,OAAV,CAAP,CATqB,CAWrB;;EACA,IAAIC,OAAO,GAAG,EAAd;EAAA,IACIC,IAAI,GAAG,EADX;;EAEA,KAAK,IAAIP,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGC,IAAI,CAACN,MAAzB,EAAkCI,CAAC,GAAGC,CAAtC,EAA0CD,CAAC,EAA3C,EAAgD;IAC9C,IAAIQ,OAAO,GAAGN,IAAI,CAACF,CAAD,CAAlB;IAAA,IACIS,IAAI,GAAGP,IAAI,CAACF,CAAC,GAAG,CAAL,CAAJ,IAAe,EAD1B;IAAA,IAEIU,WAAW,GAAG,IAFlB;IAAA,IAGIC,WAAW,GAAG,IAHlB;IAIA,IAAIH,OAAO,KAAKC,IAAhB,EAAsB;;IACtB,KAAK,IAAIG,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGL,OAAO,CAACZ,MAA7B,EAAsCgB,CAAC,GAAGC,EAA1C,EAA+CD,CAAC,EAAhD,EAAqD;MACnD,IAAIE,OAAO,GAAGN,OAAO,CAACO,MAAR,CAAeH,CAAf,CAAd;MACAF,WAAW,GAAGA,WAAW,IAAII,OAAO,KAAKL,IAAI,CAACM,MAAL,CAAYH,CAAZ,CAAzC;MACAD,WAAW,GAAGA,WAAW,IAAIG,OAAO,KAAKP,IAAI,CAACQ,MAAL,CAAYH,CAAZ,CAAzC;;MACA,IAAI,CAACF,WAAD,IAAgB,CAACC,WAArB,EAAkC;QAChCC,CAAC;QACD;MACD;IACF;;IACDL,IAAI,GAAGC,OAAP;;IACA,IAAII,CAAC,KAAKC,EAAV,EAAc;MACZP,OAAO,CAACE,OAAD,CAAP,GAAmBA,OAAnB;MACA;IACD;;IACD,KAAK,IAAIQ,CAAC,GAAGR,OAAO,CAACS,MAAR,CAAe,CAAf,EAAkBL,CAAlB,CAAb,EAAoCA,CAAC,IAAIC,EAAzC,EAA8CD,CAAC,EAA/C,EAAoD;MAClDN,OAAO,CAACU,CAAD,CAAP,GAAaR,OAAb;MACAQ,CAAC,IAAIR,OAAO,CAACO,MAAR,CAAeH,CAAf,CAAL;IACD;EACF;;EACD,OAAON,OAAP;AACD;;AAED,SAASD,OAAT,CAAkBW,CAAlB,EAAqBE,CAArB,EAAwB;EACtB,OAAOF,CAAC,KAAKE,CAAN,GAAU,CAAV,GAAcF,CAAC,GAAGE,CAAJ,GAAQ,CAAR,GAAY,CAAC,CAAlC;AACD"},"metadata":{},"sourceType":"script"}