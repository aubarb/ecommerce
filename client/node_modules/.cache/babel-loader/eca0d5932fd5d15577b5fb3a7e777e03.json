{"ast":null,"code":"module.exports = MultiPoint;\n\nvar util = require('util');\n\nvar Types = require('./types');\n\nvar Geometry = require('./geometry');\n\nvar Point = require('./point');\n\nvar BinaryWriter = require('./binarywriter');\n\nfunction MultiPoint(points, srid) {\n  Geometry.call(this);\n  this.points = points || [];\n  this.srid = srid;\n\n  if (this.points.length > 0) {\n    this.hasZ = this.points[0].hasZ;\n    this.hasM = this.points[0].hasM;\n  }\n}\n\nutil.inherits(MultiPoint, Geometry);\n\nMultiPoint.Z = function (points, srid) {\n  var multiPoint = new MultiPoint(points, srid);\n  multiPoint.hasZ = true;\n  return multiPoint;\n};\n\nMultiPoint.M = function (points, srid) {\n  var multiPoint = new MultiPoint(points, srid);\n  multiPoint.hasM = true;\n  return multiPoint;\n};\n\nMultiPoint.ZM = function (points, srid) {\n  var multiPoint = new MultiPoint(points, srid);\n  multiPoint.hasZ = true;\n  multiPoint.hasM = true;\n  return multiPoint;\n};\n\nMultiPoint._parseWkt = function (value, options) {\n  var multiPoint = new MultiPoint();\n  multiPoint.srid = options.srid;\n  multiPoint.hasZ = options.hasZ;\n  multiPoint.hasM = options.hasM;\n  if (value.isMatch(['EMPTY'])) return multiPoint;\n  value.expectGroupStart();\n  multiPoint.points.push.apply(multiPoint.points, value.matchCoordinates(options));\n  value.expectGroupEnd();\n  return multiPoint;\n};\n\nMultiPoint._parseWkb = function (value, options) {\n  var multiPoint = new MultiPoint();\n  multiPoint.srid = options.srid;\n  multiPoint.hasZ = options.hasZ;\n  multiPoint.hasM = options.hasM;\n  var pointCount = value.readUInt32();\n\n  for (var i = 0; i < pointCount; i++) multiPoint.points.push(Geometry.parse(value, options));\n\n  return multiPoint;\n};\n\nMultiPoint._parseTwkb = function (value, options) {\n  var multiPoint = new MultiPoint();\n  multiPoint.hasZ = options.hasZ;\n  multiPoint.hasM = options.hasM;\n  if (options.isEmpty) return multiPoint;\n  var previousPoint = new Point(0, 0, options.hasZ ? 0 : undefined, options.hasM ? 0 : undefined);\n  var pointCount = value.readVarInt();\n\n  for (var i = 0; i < pointCount; i++) multiPoint.points.push(Point._readTwkbPoint(value, options, previousPoint));\n\n  return multiPoint;\n};\n\nMultiPoint._parseGeoJSON = function (value) {\n  var multiPoint = new MultiPoint();\n  if (value.coordinates.length > 0) multiPoint.hasZ = value.coordinates[0].length > 2;\n\n  for (var i = 0; i < value.coordinates.length; i++) multiPoint.points.push(Point._parseGeoJSON({\n    coordinates: value.coordinates[i]\n  }));\n\n  return multiPoint;\n};\n\nMultiPoint.prototype.toWkt = function () {\n  if (this.points.length === 0) return this._getWktType(Types.wkt.MultiPoint, true);\n  var wkt = this._getWktType(Types.wkt.MultiPoint, false) + '(';\n\n  for (var i = 0; i < this.points.length; i++) wkt += this._getWktCoordinate(this.points[i]) + ',';\n\n  wkt = wkt.slice(0, -1);\n  wkt += ')';\n  return wkt;\n};\n\nMultiPoint.prototype.toWkb = function () {\n  var wkb = new BinaryWriter(this._getWkbSize());\n  wkb.writeInt8(1);\n\n  this._writeWkbType(wkb, Types.wkb.MultiPoint);\n\n  wkb.writeUInt32LE(this.points.length);\n\n  for (var i = 0; i < this.points.length; i++) wkb.writeBuffer(this.points[i].toWkb({\n    srid: this.srid\n  }));\n\n  return wkb.buffer;\n};\n\nMultiPoint.prototype.toTwkb = function () {\n  var twkb = new BinaryWriter(0, true);\n  var precision = Geometry.getTwkbPrecision(5, 0, 0);\n  var isEmpty = this.points.length === 0;\n\n  this._writeTwkbHeader(twkb, Types.wkb.MultiPoint, precision, isEmpty);\n\n  if (this.points.length > 0) {\n    twkb.writeVarInt(this.points.length);\n    var previousPoint = new Point(0, 0, 0, 0);\n\n    for (var i = 0; i < this.points.length; i++) this.points[i]._writeTwkbPoint(twkb, precision, previousPoint);\n  }\n\n  return twkb.buffer;\n};\n\nMultiPoint.prototype._getWkbSize = function () {\n  var coordinateSize = 16;\n  if (this.hasZ) coordinateSize += 8;\n  if (this.hasM) coordinateSize += 8;\n  coordinateSize += 5;\n  return 1 + 4 + 4 + this.points.length * coordinateSize;\n};\n\nMultiPoint.prototype.toGeoJSON = function (options) {\n  var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\n  geoJSON.type = Types.geoJSON.MultiPoint;\n  geoJSON.coordinates = [];\n\n  for (var i = 0; i < this.points.length; i++) geoJSON.coordinates.push(this.points[i].toGeoJSON().coordinates);\n\n  return geoJSON;\n};","map":{"version":3,"names":["module","exports","MultiPoint","util","require","Types","Geometry","Point","BinaryWriter","points","srid","call","length","hasZ","hasM","inherits","Z","multiPoint","M","ZM","_parseWkt","value","options","isMatch","expectGroupStart","push","apply","matchCoordinates","expectGroupEnd","_parseWkb","pointCount","readUInt32","i","parse","_parseTwkb","isEmpty","previousPoint","undefined","readVarInt","_readTwkbPoint","_parseGeoJSON","coordinates","prototype","toWkt","_getWktType","wkt","_getWktCoordinate","slice","toWkb","wkb","_getWkbSize","writeInt8","_writeWkbType","writeUInt32LE","writeBuffer","buffer","toTwkb","twkb","precision","getTwkbPrecision","_writeTwkbHeader","writeVarInt","_writeTwkbPoint","coordinateSize","toGeoJSON","geoJSON","type"],"sources":["/Users/aurele/node_modules/wkx/lib/multipoint.js"],"sourcesContent":["module.exports = MultiPoint;\r\n\r\nvar util = require('util');\r\n\r\nvar Types = require('./types');\r\nvar Geometry = require('./geometry');\r\nvar Point = require('./point');\r\nvar BinaryWriter = require('./binarywriter');\r\n\r\nfunction MultiPoint(points, srid) {\r\n    Geometry.call(this);\r\n\r\n    this.points = points || [];\r\n\tthis.srid = srid;\r\n\t\r\n    if (this.points.length > 0) {\r\n        this.hasZ = this.points[0].hasZ;\r\n        this.hasM = this.points[0].hasM;\r\n    }\r\n}\r\n\r\nutil.inherits(MultiPoint, Geometry);\r\n\r\nMultiPoint.Z = function (points, srid) {\r\n    var multiPoint = new MultiPoint(points, srid);\r\n    multiPoint.hasZ = true;\r\n    return multiPoint;\r\n};\r\n\r\nMultiPoint.M = function (points, srid) {\r\n    var multiPoint = new MultiPoint(points, srid);\r\n    multiPoint.hasM = true;\r\n    return multiPoint;\r\n};\r\n\r\nMultiPoint.ZM = function (points, srid) {\r\n    var multiPoint = new MultiPoint(points, srid);\r\n    multiPoint.hasZ = true;\r\n    multiPoint.hasM = true;\r\n    return multiPoint;\r\n};\r\n\r\nMultiPoint._parseWkt = function (value, options) {\r\n    var multiPoint = new MultiPoint();\r\n    multiPoint.srid = options.srid;\r\n    multiPoint.hasZ = options.hasZ;\r\n    multiPoint.hasM = options.hasM;\r\n\r\n    if (value.isMatch(['EMPTY']))\r\n        return multiPoint;\r\n\r\n    value.expectGroupStart();\r\n    multiPoint.points.push.apply(multiPoint.points, value.matchCoordinates(options));\r\n    value.expectGroupEnd();\r\n\r\n    return multiPoint;\r\n};\r\n\r\nMultiPoint._parseWkb = function (value, options) {\r\n    var multiPoint = new MultiPoint();\r\n    multiPoint.srid = options.srid;\r\n    multiPoint.hasZ = options.hasZ;\r\n    multiPoint.hasM = options.hasM;\r\n\r\n    var pointCount = value.readUInt32();\r\n\r\n    for (var i = 0; i < pointCount; i++)\r\n        multiPoint.points.push(Geometry.parse(value, options));\r\n\r\n    return multiPoint;\r\n};\r\n\r\nMultiPoint._parseTwkb = function (value, options) {\r\n    var multiPoint = new MultiPoint();\r\n    multiPoint.hasZ = options.hasZ;\r\n    multiPoint.hasM = options.hasM;\r\n\r\n    if (options.isEmpty)\r\n        return multiPoint;\r\n\r\n    var previousPoint = new Point(0, 0, options.hasZ ? 0 : undefined, options.hasM ? 0 : undefined);\r\n    var pointCount = value.readVarInt();\r\n\r\n    for (var i = 0; i < pointCount; i++)\r\n        multiPoint.points.push(Point._readTwkbPoint(value, options, previousPoint));\r\n\r\n    return multiPoint;\r\n};\r\n\r\nMultiPoint._parseGeoJSON = function (value) {\r\n    var multiPoint = new MultiPoint();\r\n\r\n    if (value.coordinates.length > 0)\r\n        multiPoint.hasZ = value.coordinates[0].length > 2;\r\n\r\n    for (var i = 0; i < value.coordinates.length; i++)\r\n        multiPoint.points.push(Point._parseGeoJSON({ coordinates: value.coordinates[i] }));\r\n\r\n    return multiPoint;\r\n};\r\n\r\nMultiPoint.prototype.toWkt = function () {\r\n    if (this.points.length === 0)\r\n        return this._getWktType(Types.wkt.MultiPoint, true);\r\n\r\n    var wkt = this._getWktType(Types.wkt.MultiPoint, false) + '(';\r\n\r\n    for (var i = 0; i < this.points.length; i++)\r\n        wkt += this._getWktCoordinate(this.points[i]) + ',';\r\n\r\n    wkt = wkt.slice(0, -1);\r\n    wkt += ')';\r\n\r\n    return wkt;\r\n};\r\n\r\nMultiPoint.prototype.toWkb = function () {\r\n    var wkb = new BinaryWriter(this._getWkbSize());\r\n\r\n    wkb.writeInt8(1);\r\n\r\n    this._writeWkbType(wkb, Types.wkb.MultiPoint);\r\n    wkb.writeUInt32LE(this.points.length);\r\n\r\n    for (var i = 0; i < this.points.length; i++)\r\n        wkb.writeBuffer(this.points[i].toWkb({ srid: this.srid }));\r\n\r\n    return wkb.buffer;\r\n};\r\n\r\nMultiPoint.prototype.toTwkb = function () {\r\n    var twkb = new BinaryWriter(0, true);\r\n\r\n    var precision = Geometry.getTwkbPrecision(5, 0, 0);\r\n    var isEmpty = this.points.length === 0;\r\n\r\n    this._writeTwkbHeader(twkb, Types.wkb.MultiPoint, precision, isEmpty);\r\n\r\n    if (this.points.length > 0) {\r\n        twkb.writeVarInt(this.points.length);\r\n\r\n        var previousPoint = new Point(0, 0, 0, 0);\r\n        for (var i = 0; i < this.points.length; i++)\r\n            this.points[i]._writeTwkbPoint(twkb, precision, previousPoint);\r\n    }\r\n\r\n    return twkb.buffer;\r\n};\r\n\r\nMultiPoint.prototype._getWkbSize = function () {\r\n    var coordinateSize = 16;\r\n\r\n    if (this.hasZ)\r\n        coordinateSize += 8;\r\n    if (this.hasM)\r\n        coordinateSize += 8;\r\n\r\n    coordinateSize += 5;\r\n\r\n    return 1 + 4 + 4 + (this.points.length * coordinateSize);\r\n};\r\n\r\nMultiPoint.prototype.toGeoJSON = function (options) {\r\n    var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\r\n    geoJSON.type = Types.geoJSON.MultiPoint;\r\n    geoJSON.coordinates = [];\r\n\r\n    for (var i = 0; i < this.points.length; i++)\r\n        geoJSON.coordinates.push(this.points[i].toGeoJSON().coordinates);\r\n\r\n    return geoJSON;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}