{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIPRange;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar subnetMaybe = /^\\d{1,3}$/;\nvar v4Subnet = 32;\nvar v6Subnet = 128;\n\nfunction isIPRange(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  (0, _assertString.default)(str);\n  var parts = str.split('/'); // parts[0] -> ip, parts[1] -> subnet\n\n  if (parts.length !== 2) {\n    return false;\n  }\n\n  if (!subnetMaybe.test(parts[1])) {\n    return false;\n  } // Disallow preceding 0 i.e. 01, 02, ...\n\n\n  if (parts[1].length > 1 && parts[1].startsWith('0')) {\n    return false;\n  }\n\n  var isValidIP = (0, _isIP.default)(parts[0], version);\n\n  if (!isValidIP) {\n    return false;\n  } // Define valid subnet according to IP's version\n\n\n  var expectedSubnet = null;\n\n  switch (String(version)) {\n    case '4':\n      expectedSubnet = v4Subnet;\n      break;\n\n    case '6':\n      expectedSubnet = v6Subnet;\n      break;\n\n    default:\n      expectedSubnet = (0, _isIP.default)(parts[0], '6') ? v6Subnet : v4Subnet;\n  }\n\n  return parts[1] <= expectedSubnet && parts[1] >= 0;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","isIPRange","_assertString","_interopRequireDefault","require","_isIP","obj","__esModule","subnetMaybe","v4Subnet","v6Subnet","str","version","arguments","length","undefined","parts","split","test","startsWith","isValidIP","expectedSubnet","String","module"],"sources":["/Users/aurele/node_modules/validator/lib/isIPRange.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIPRange;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar subnetMaybe = /^\\d{1,3}$/;\nvar v4Subnet = 32;\nvar v6Subnet = 128;\n\nfunction isIPRange(str) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  (0, _assertString.default)(str);\n  var parts = str.split('/'); // parts[0] -> ip, parts[1] -> subnet\n\n  if (parts.length !== 2) {\n    return false;\n  }\n\n  if (!subnetMaybe.test(parts[1])) {\n    return false;\n  } // Disallow preceding 0 i.e. 01, 02, ...\n\n\n  if (parts[1].length > 1 && parts[1].startsWith('0')) {\n    return false;\n  }\n\n  var isValidIP = (0, _isIP.default)(parts[0], version);\n\n  if (!isValidIP) {\n    return false;\n  } // Define valid subnet according to IP's version\n\n\n  var expectedSubnet = null;\n\n  switch (String(version)) {\n    case '4':\n      expectedSubnet = v4Subnet;\n      break;\n\n    case '6':\n      expectedSubnet = v6Subnet;\n      break;\n\n    default:\n      expectedSubnet = (0, _isIP.default)(parts[0], '6') ? v6Subnet : v4Subnet;\n  }\n\n  return parts[1] <= expectedSubnet && parts[1] >= 0;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAC3CC,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,SAAlB;;AAEA,IAAIC,aAAa,GAAGC,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA1C;;AAEA,IAAIC,KAAK,GAAGF,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAAlC;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;IAAEN,OAAO,EAAEM;EAAX,CAArC;AAAwD;;AAE/F,IAAIE,WAAW,GAAG,WAAlB;AACA,IAAIC,QAAQ,GAAG,EAAf;AACA,IAAIC,QAAQ,GAAG,GAAf;;AAEA,SAAST,SAAT,CAAmBU,GAAnB,EAAwB;EACtB,IAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;EACA,CAAC,GAAGX,aAAa,CAACF,OAAlB,EAA2BW,GAA3B;EACA,IAAIK,KAAK,GAAGL,GAAG,CAACM,KAAJ,CAAU,GAAV,CAAZ,CAHsB,CAGM;;EAE5B,IAAID,KAAK,CAACF,MAAN,KAAiB,CAArB,EAAwB;IACtB,OAAO,KAAP;EACD;;EAED,IAAI,CAACN,WAAW,CAACU,IAAZ,CAAiBF,KAAK,CAAC,CAAD,CAAtB,CAAL,EAAiC;IAC/B,OAAO,KAAP;EACD,CAXqB,CAWpB;;;EAGF,IAAIA,KAAK,CAAC,CAAD,CAAL,CAASF,MAAT,GAAkB,CAAlB,IAAuBE,KAAK,CAAC,CAAD,CAAL,CAASG,UAAT,CAAoB,GAApB,CAA3B,EAAqD;IACnD,OAAO,KAAP;EACD;;EAED,IAAIC,SAAS,GAAG,CAAC,GAAGf,KAAK,CAACL,OAAV,EAAmBgB,KAAK,CAAC,CAAD,CAAxB,EAA6BJ,OAA7B,CAAhB;;EAEA,IAAI,CAACQ,SAAL,EAAgB;IACd,OAAO,KAAP;EACD,CAtBqB,CAsBpB;;;EAGF,IAAIC,cAAc,GAAG,IAArB;;EAEA,QAAQC,MAAM,CAACV,OAAD,CAAd;IACE,KAAK,GAAL;MACES,cAAc,GAAGZ,QAAjB;MACA;;IAEF,KAAK,GAAL;MACEY,cAAc,GAAGX,QAAjB;MACA;;IAEF;MACEW,cAAc,GAAG,CAAC,GAAGhB,KAAK,CAACL,OAAV,EAAmBgB,KAAK,CAAC,CAAD,CAAxB,EAA6B,GAA7B,IAAoCN,QAApC,GAA+CD,QAAhE;EAVJ;;EAaA,OAAOO,KAAK,CAAC,CAAD,CAAL,IAAYK,cAAZ,IAA8BL,KAAK,CAAC,CAAD,CAAL,IAAY,CAAjD;AACD;;AAEDO,MAAM,CAACzB,OAAP,GAAiBA,OAAO,CAACE,OAAzB;AACAuB,MAAM,CAACzB,OAAP,CAAeE,OAAf,GAAyBF,OAAO,CAACE,OAAjC"},"metadata":{},"sourceType":"script"}