{"ast":null,"code":"import { baseUrl } from \"./baseUrl\";\nexport const getUser = async () => {};\nuseEffect(() => {\n  const fetchData = async () => {\n    try {\n      const response = await fetch(`${baseUrl}/account`, {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        } //we send the token in the header, back-end middleware receives req.header(\"token\")\n\n      });\n      const parsRes = await response.json();\n      setUser({\n        id: parsRes.id,\n        first_name: parsRes.first_name,\n        last_name: parsRes.last_name,\n        email: parsRes.email,\n        password: parsRes.password\n      });\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  fetchData();\n}, [setUser]);\nexport const updateUser = async (first_name, last_name, id) => {\n  try {\n    const body = {\n      first_name,\n      last_name\n    };\n    const result = await fetch(`${baseUrl}/users/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    });\n    const res = await result.json();\n    console.log(res);\n    return res;\n  } catch (err) {\n    console.error(err.message);\n  }\n};","map":{"version":3,"names":["baseUrl","getUser","useEffect","fetchData","response","fetch","method","headers","token","localStorage","parsRes","json","setUser","id","first_name","last_name","email","password","err","console","error","message","updateUser","body","result","JSON","stringify","res","log"],"sources":["/Users/aurele/Desktop/E-Commerce App/views/src/api/user.js"],"sourcesContent":["import { baseUrl } from \"./baseUrl\";\n\n\nexport const getUser = async () => {\n  \n}\n\nuseEffect(() => {\n  const fetchData = async () => {\n    try {\n      const response = await fetch(`${baseUrl}/account`, {\n        method: \"GET\",\n        headers: { token: localStorage.token }, //we send the token in the header, back-end middleware receives req.header(\"token\")\n      });\n      const parsRes = await response.json();\n      setUser({\n        id: parsRes.id,\n        first_name: parsRes.first_name,\n        last_name: parsRes.last_name,\n        email: parsRes.email,\n        password: parsRes.password,\n      });\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n  fetchData();\n}, [setUser]);\n\nexport const updateUser = async (first_name, last_name, id) => {\n  try {\n    const body = { first_name, last_name };\n    const result = await fetch(`${baseUrl}/users/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(body),\n    }); \n    const res = await result.json();\n    console.log(res);\n    return res;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,WAAxB;AAGA,OAAO,MAAMC,OAAO,GAAG,YAAY,CAElC,CAFM;AAIPC,SAAS,CAAC,MAAM;EACd,MAAMC,SAAS,GAAG,YAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,OAAQ,UAAZ,EAAuB;QACjDM,MAAM,EAAE,KADyC;QAEjDC,OAAO,EAAE;UAAEC,KAAK,EAAEC,YAAY,CAACD;QAAtB,CAFwC,CAET;;MAFS,CAAvB,CAA5B;MAIA,MAAME,OAAO,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAtB;MACAC,OAAO,CAAC;QACNC,EAAE,EAAEH,OAAO,CAACG,EADN;QAENC,UAAU,EAAEJ,OAAO,CAACI,UAFd;QAGNC,SAAS,EAAEL,OAAO,CAACK,SAHb;QAINC,KAAK,EAAEN,OAAO,CAACM,KAJT;QAKNC,QAAQ,EAAEP,OAAO,CAACO;MALZ,CAAD,CAAP;IAOD,CAbD,CAaE,OAAOC,GAAP,EAAY;MACZC,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;IACD;EACF,CAjBD;;EAkBAlB,SAAS;AACV,CApBQ,EAoBN,CAACS,OAAD,CApBM,CAAT;AAsBA,OAAO,MAAMU,UAAU,GAAG,OAAOR,UAAP,EAAmBC,SAAnB,EAA8BF,EAA9B,KAAqC;EAC7D,IAAI;IACF,MAAMU,IAAI,GAAG;MAAET,UAAF;MAAcC;IAAd,CAAb;IACA,MAAMS,MAAM,GAAG,MAAMnB,KAAK,CAAE,GAAEL,OAAQ,UAASa,EAAG,EAAxB,EAA2B;MACnDP,MAAM,EAAE,KAD2C;MAEnDC,OAAO,EAAE;QACP,gBAAgB;MADT,CAF0C;MAKnDgB,IAAI,EAAEE,IAAI,CAACC,SAAL,CAAeH,IAAf;IAL6C,CAA3B,CAA1B;IAOA,MAAMI,GAAG,GAAG,MAAMH,MAAM,CAACb,IAAP,EAAlB;IACAQ,OAAO,CAACS,GAAR,CAAYD,GAAZ;IACA,OAAOA,GAAP;EACD,CAZD,CAYE,OAAOT,GAAP,EAAY;IACZC,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,OAAlB;EACD;AACF,CAhBM"},"metadata":{},"sourceType":"module"}