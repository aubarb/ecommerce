{"ast":null,"code":"// info about each config option.\nvar debug = process.env.DEBUG_NOPT || process.env.NOPT_DEBUG ? function () {\n  console.error.apply(console, arguments);\n} : function () {};\n\nvar url = require(\"url\"),\n    path = require(\"path\"),\n    Stream = require(\"stream\").Stream,\n    abbrev = require(\"abbrev\"),\n    os = require(\"os\");\n\nmodule.exports = exports = nopt;\nexports.clean = clean;\nexports.typeDefs = {\n  String: {\n    type: String,\n    validate: validateString\n  },\n  Boolean: {\n    type: Boolean,\n    validate: validateBoolean\n  },\n  url: {\n    type: url,\n    validate: validateUrl\n  },\n  Number: {\n    type: Number,\n    validate: validateNumber\n  },\n  path: {\n    type: path,\n    validate: validatePath\n  },\n  Stream: {\n    type: Stream,\n    validate: validateStream\n  },\n  Date: {\n    type: Date,\n    validate: validateDate\n  }\n};\n\nfunction nopt(types, shorthands, args, slice) {\n  args = args || process.argv;\n  types = types || {};\n  shorthands = shorthands || {};\n  if (typeof slice !== \"number\") slice = 2;\n  debug(types, shorthands, args, slice);\n  args = args.slice(slice);\n  var data = {},\n      key,\n      argv = {\n    remain: [],\n    cooked: args,\n    original: args.slice(0)\n  };\n  parse(args, data, argv.remain, types, shorthands); // now data is full\n\n  clean(data, types, exports.typeDefs);\n  data.argv = argv;\n  Object.defineProperty(data.argv, 'toString', {\n    value: function () {\n      return this.original.map(JSON.stringify).join(\" \");\n    },\n    enumerable: false\n  });\n  return data;\n}\n\nfunction clean(data, types, typeDefs) {\n  typeDefs = typeDefs || exports.typeDefs;\n  var remove = {},\n      typeDefault = [false, true, null, String, Array];\n  Object.keys(data).forEach(function (k) {\n    if (k === \"argv\") return;\n    var val = data[k],\n        isArray = Array.isArray(val),\n        type = types[k];\n    if (!isArray) val = [val];\n    if (!type) type = typeDefault;\n    if (type === Array) type = typeDefault.concat(Array);\n    if (!Array.isArray(type)) type = [type];\n    debug(\"val=%j\", val);\n    debug(\"types=\", type);\n    val = val.map(function (val) {\n      // if it's an unknown value, then parse false/true/null/numbers/dates\n      if (typeof val === \"string\") {\n        debug(\"string %j\", val);\n        val = val.trim();\n\n        if (val === \"null\" && ~type.indexOf(null) || val === \"true\" && (~type.indexOf(true) || ~type.indexOf(Boolean)) || val === \"false\" && (~type.indexOf(false) || ~type.indexOf(Boolean))) {\n          val = JSON.parse(val);\n          debug(\"jsonable %j\", val);\n        } else if (~type.indexOf(Number) && !isNaN(val)) {\n          debug(\"convert to number\", val);\n          val = +val;\n        } else if (~type.indexOf(Date) && !isNaN(Date.parse(val))) {\n          debug(\"convert to date\", val);\n          val = new Date(val);\n        }\n      }\n\n      if (!types.hasOwnProperty(k)) {\n        return val;\n      } // allow `--no-blah` to set 'blah' to null if null is allowed\n\n\n      if (val === false && ~type.indexOf(null) && !(~type.indexOf(false) || ~type.indexOf(Boolean))) {\n        val = null;\n      }\n\n      var d = {};\n      d[k] = val;\n      debug(\"prevalidated val\", d, val, types[k]);\n\n      if (!validate(d, k, val, types[k], typeDefs)) {\n        if (exports.invalidHandler) {\n          exports.invalidHandler(k, val, types[k], data);\n        } else if (exports.invalidHandler !== false) {\n          debug(\"invalid: \" + k + \"=\" + val, types[k]);\n        }\n\n        return remove;\n      }\n\n      debug(\"validated val\", d, val, types[k]);\n      return d[k];\n    }).filter(function (val) {\n      return val !== remove;\n    }); // if we allow Array specifically, then an empty array is how we\n    // express 'no value here', not null.  Allow it.\n\n    if (!val.length && type.indexOf(Array) === -1) {\n      debug('VAL HAS NO LENGTH, DELETE IT', val, k, type.indexOf(Array));\n      delete data[k];\n    } else if (isArray) {\n      debug(isArray, data[k], val);\n      data[k] = val;\n    } else data[k] = val[0];\n\n    debug(\"k=%s val=%j\", k, val, data[k]);\n  });\n}\n\nfunction validateString(data, k, val) {\n  data[k] = String(val);\n}\n\nfunction validatePath(data, k, val) {\n  if (val === true) return false;\n  if (val === null) return true;\n  val = String(val);\n  var isWin = process.platform === 'win32',\n      homePattern = isWin ? /^~(\\/|\\\\)/ : /^~\\//,\n      home = os.homedir();\n\n  if (home && val.match(homePattern)) {\n    data[k] = path.resolve(home, val.substr(2));\n  } else {\n    data[k] = path.resolve(val);\n  }\n\n  return true;\n}\n\nfunction validateNumber(data, k, val) {\n  debug(\"validate Number %j %j %j\", k, val, isNaN(val));\n  if (isNaN(val)) return false;\n  data[k] = +val;\n}\n\nfunction validateDate(data, k, val) {\n  var s = Date.parse(val);\n  debug(\"validate Date %j %j %j\", k, val, s);\n  if (isNaN(s)) return false;\n  data[k] = new Date(val);\n}\n\nfunction validateBoolean(data, k, val) {\n  if (val instanceof Boolean) val = val.valueOf();else if (typeof val === \"string\") {\n    if (!isNaN(val)) val = !!+val;else if (val === \"null\" || val === \"false\") val = false;else val = true;\n  } else val = !!val;\n  data[k] = val;\n}\n\nfunction validateUrl(data, k, val) {\n  val = url.parse(String(val));\n  if (!val.host) return false;\n  data[k] = val.href;\n}\n\nfunction validateStream(data, k, val) {\n  if (!(val instanceof Stream)) return false;\n  data[k] = val;\n}\n\nfunction validate(data, k, val, type, typeDefs) {\n  // arrays are lists of types.\n  if (Array.isArray(type)) {\n    for (var i = 0, l = type.length; i < l; i++) {\n      if (type[i] === Array) continue;\n      if (validate(data, k, val, type[i], typeDefs)) return true;\n    }\n\n    delete data[k];\n    return false;\n  } // an array of anything?\n\n\n  if (type === Array) return true; // NaN is poisonous.  Means that something is not allowed.\n\n  if (type !== type) {\n    debug(\"Poison NaN\", k, val, type);\n    delete data[k];\n    return false;\n  } // explicit list of values\n\n\n  if (val === type) {\n    debug(\"Explicitly allowed %j\", val); // if (isArray) (data[k] = data[k] || []).push(val)\n    // else data[k] = val\n\n    data[k] = val;\n    return true;\n  } // now go through the list of typeDefs, validate against each one.\n\n\n  var ok = false,\n      types = Object.keys(typeDefs);\n\n  for (var i = 0, l = types.length; i < l; i++) {\n    debug(\"test type %j %j %j\", k, val, types[i]);\n    var t = typeDefs[types[i]];\n\n    if (t && (type && type.name && t.type && t.type.name ? type.name === t.type.name : type === t.type)) {\n      var d = {};\n      ok = false !== t.validate(d, k, val);\n      val = d[k];\n\n      if (ok) {\n        // if (isArray) (data[k] = data[k] || []).push(val)\n        // else data[k] = val\n        data[k] = val;\n        break;\n      }\n    }\n  }\n\n  debug(\"OK? %j (%j %j %j)\", ok, k, val, types[i]);\n  if (!ok) delete data[k];\n  return ok;\n}\n\nfunction parse(args, data, remain, types, shorthands) {\n  debug(\"parse\", args, data, remain);\n  var key = null,\n      abbrevs = abbrev(Object.keys(types)),\n      shortAbbr = abbrev(Object.keys(shorthands));\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n    debug(\"arg\", arg);\n\n    if (arg.match(/^-{2,}$/)) {\n      // done with keys.\n      // the rest are args.\n      remain.push.apply(remain, args.slice(i + 1));\n      args[i] = \"--\";\n      break;\n    }\n\n    var hadEq = false;\n\n    if (arg.charAt(0) === \"-\" && arg.length > 1) {\n      var at = arg.indexOf('=');\n\n      if (at > -1) {\n        hadEq = true;\n        var v = arg.substr(at + 1);\n        arg = arg.substr(0, at);\n        args.splice(i, 1, arg, v);\n      } // see if it's a shorthand\n      // if so, splice and back up to re-parse it.\n\n\n      var shRes = resolveShort(arg, shorthands, shortAbbr, abbrevs);\n      debug(\"arg=%j shRes=%j\", arg, shRes);\n\n      if (shRes) {\n        debug(arg, shRes);\n        args.splice.apply(args, [i, 1].concat(shRes));\n\n        if (arg !== shRes[0]) {\n          i--;\n          continue;\n        }\n      }\n\n      arg = arg.replace(/^-+/, \"\");\n      var no = null;\n\n      while (arg.toLowerCase().indexOf(\"no-\") === 0) {\n        no = !no;\n        arg = arg.substr(3);\n      }\n\n      if (abbrevs[arg]) arg = abbrevs[arg];\n      var argType = types[arg];\n      var isTypeArray = Array.isArray(argType);\n\n      if (isTypeArray && argType.length === 1) {\n        isTypeArray = false;\n        argType = argType[0];\n      }\n\n      var isArray = argType === Array || isTypeArray && argType.indexOf(Array) !== -1; // allow unknown things to be arrays if specified multiple times.\n\n      if (!types.hasOwnProperty(arg) && data.hasOwnProperty(arg)) {\n        if (!Array.isArray(data[arg])) data[arg] = [data[arg]];\n        isArray = true;\n      }\n\n      var val,\n          la = args[i + 1];\n      var isBool = typeof no === 'boolean' || argType === Boolean || isTypeArray && argType.indexOf(Boolean) !== -1 || typeof argType === 'undefined' && !hadEq || la === \"false\" && (argType === null || isTypeArray && ~argType.indexOf(null));\n\n      if (isBool) {\n        // just set and move along\n        val = !no; // however, also support --bool true or --bool false\n\n        if (la === \"true\" || la === \"false\") {\n          val = JSON.parse(la);\n          la = null;\n          if (no) val = !val;\n          i++;\n        } // also support \"foo\":[Boolean, \"bar\"] and \"--foo bar\"\n\n\n        if (isTypeArray && la) {\n          if (~argType.indexOf(la)) {\n            // an explicit type\n            val = la;\n            i++;\n          } else if (la === \"null\" && ~argType.indexOf(null)) {\n            // null allowed\n            val = null;\n            i++;\n          } else if (!la.match(/^-{2,}[^-]/) && !isNaN(la) && ~argType.indexOf(Number)) {\n            // number\n            val = +la;\n            i++;\n          } else if (!la.match(/^-[^-]/) && ~argType.indexOf(String)) {\n            // string\n            val = la;\n            i++;\n          }\n        }\n\n        if (isArray) (data[arg] = data[arg] || []).push(val);else data[arg] = val;\n        continue;\n      }\n\n      if (argType === String) {\n        if (la === undefined) {\n          la = \"\";\n        } else if (la.match(/^-{1,2}[^-]+/)) {\n          la = \"\";\n          i--;\n        }\n      }\n\n      if (la && la.match(/^-{2,}$/)) {\n        la = undefined;\n        i--;\n      }\n\n      val = la === undefined ? true : la;\n      if (isArray) (data[arg] = data[arg] || []).push(val);else data[arg] = val;\n      i++;\n      continue;\n    }\n\n    remain.push(arg);\n  }\n}\n\nfunction resolveShort(arg, shorthands, shortAbbr, abbrevs) {\n  // handle single-char shorthands glommed together, like\n  // npm ls -glp, but only if there is one dash, and only if\n  // all of the chars are single-char shorthands, and it's\n  // not a match to some other abbrev.\n  arg = arg.replace(/^-+/, ''); // if it's an exact known option, then don't go any further\n\n  if (abbrevs[arg] === arg) return null; // if it's an exact known shortopt, same deal\n\n  if (shorthands[arg]) {\n    // make it an array, if it's a list of words\n    if (shorthands[arg] && !Array.isArray(shorthands[arg])) shorthands[arg] = shorthands[arg].split(/\\s+/);\n    return shorthands[arg];\n  } // first check to see if this arg is a set of single-char shorthands\n\n\n  var singles = shorthands.___singles;\n\n  if (!singles) {\n    singles = Object.keys(shorthands).filter(function (s) {\n      return s.length === 1;\n    }).reduce(function (l, r) {\n      l[r] = true;\n      return l;\n    }, {});\n    shorthands.___singles = singles;\n    debug('shorthand singles', singles);\n  }\n\n  var chrs = arg.split(\"\").filter(function (c) {\n    return singles[c];\n  });\n  if (chrs.join(\"\") === arg) return chrs.map(function (c) {\n    return shorthands[c];\n  }).reduce(function (l, r) {\n    return l.concat(r);\n  }, []); // if it's an arg abbrev, and not a literal shorthand, then prefer the arg\n\n  if (abbrevs[arg] && !shorthands[arg]) return null; // if it's an abbr for a shorthand, then use that\n\n  if (shortAbbr[arg]) arg = shortAbbr[arg]; // make it an array, if it's a list of words\n\n  if (shorthands[arg] && !Array.isArray(shorthands[arg])) shorthands[arg] = shorthands[arg].split(/\\s+/);\n  return shorthands[arg];\n}","map":{"version":3,"names":["debug","process","env","DEBUG_NOPT","NOPT_DEBUG","console","error","apply","arguments","url","require","path","Stream","abbrev","os","module","exports","nopt","clean","typeDefs","String","type","validate","validateString","Boolean","validateBoolean","validateUrl","Number","validateNumber","validatePath","validateStream","Date","validateDate","types","shorthands","args","slice","argv","data","key","remain","cooked","original","parse","Object","defineProperty","value","map","JSON","stringify","join","enumerable","remove","typeDefault","Array","keys","forEach","k","val","isArray","concat","trim","indexOf","isNaN","hasOwnProperty","d","invalidHandler","filter","length","isWin","platform","homePattern","home","homedir","match","resolve","substr","s","valueOf","host","href","i","l","ok","t","name","abbrevs","shortAbbr","arg","push","hadEq","charAt","at","v","splice","shRes","resolveShort","replace","no","toLowerCase","argType","isTypeArray","la","isBool","undefined","split","singles","___singles","reduce","r","chrs","c"],"sources":["/Users/aurele/Desktop/E-Commerce App/views/node_modules/nopt/lib/nopt.js"],"sourcesContent":["// info about each config option.\n\nvar debug = process.env.DEBUG_NOPT || process.env.NOPT_DEBUG\n  ? function () { console.error.apply(console, arguments) }\n  : function () {}\n\nvar url = require(\"url\")\n  , path = require(\"path\")\n  , Stream = require(\"stream\").Stream\n  , abbrev = require(\"abbrev\")\n  , os = require(\"os\")\n\nmodule.exports = exports = nopt\nexports.clean = clean\n\nexports.typeDefs =\n  { String  : { type: String,  validate: validateString  }\n  , Boolean : { type: Boolean, validate: validateBoolean }\n  , url     : { type: url,     validate: validateUrl     }\n  , Number  : { type: Number,  validate: validateNumber  }\n  , path    : { type: path,    validate: validatePath    }\n  , Stream  : { type: Stream,  validate: validateStream  }\n  , Date    : { type: Date,    validate: validateDate    }\n  }\n\nfunction nopt (types, shorthands, args, slice) {\n  args = args || process.argv\n  types = types || {}\n  shorthands = shorthands || {}\n  if (typeof slice !== \"number\") slice = 2\n\n  debug(types, shorthands, args, slice)\n\n  args = args.slice(slice)\n  var data = {}\n    , key\n    , argv = {\n        remain: [],\n        cooked: args,\n        original: args.slice(0)\n      }\n\n  parse(args, data, argv.remain, types, shorthands)\n  // now data is full\n  clean(data, types, exports.typeDefs)\n  data.argv = argv\n  Object.defineProperty(data.argv, 'toString', { value: function () {\n    return this.original.map(JSON.stringify).join(\" \")\n  }, enumerable: false })\n  return data\n}\n\nfunction clean (data, types, typeDefs) {\n  typeDefs = typeDefs || exports.typeDefs\n  var remove = {}\n    , typeDefault = [false, true, null, String, Array]\n\n  Object.keys(data).forEach(function (k) {\n    if (k === \"argv\") return\n    var val = data[k]\n      , isArray = Array.isArray(val)\n      , type = types[k]\n    if (!isArray) val = [val]\n    if (!type) type = typeDefault\n    if (type === Array) type = typeDefault.concat(Array)\n    if (!Array.isArray(type)) type = [type]\n\n    debug(\"val=%j\", val)\n    debug(\"types=\", type)\n    val = val.map(function (val) {\n      // if it's an unknown value, then parse false/true/null/numbers/dates\n      if (typeof val === \"string\") {\n        debug(\"string %j\", val)\n        val = val.trim()\n        if ((val === \"null\" && ~type.indexOf(null))\n            || (val === \"true\" &&\n               (~type.indexOf(true) || ~type.indexOf(Boolean)))\n            || (val === \"false\" &&\n               (~type.indexOf(false) || ~type.indexOf(Boolean)))) {\n          val = JSON.parse(val)\n          debug(\"jsonable %j\", val)\n        } else if (~type.indexOf(Number) && !isNaN(val)) {\n          debug(\"convert to number\", val)\n          val = +val\n        } else if (~type.indexOf(Date) && !isNaN(Date.parse(val))) {\n          debug(\"convert to date\", val)\n          val = new Date(val)\n        }\n      }\n\n      if (!types.hasOwnProperty(k)) {\n        return val\n      }\n\n      // allow `--no-blah` to set 'blah' to null if null is allowed\n      if (val === false && ~type.indexOf(null) &&\n          !(~type.indexOf(false) || ~type.indexOf(Boolean))) {\n        val = null\n      }\n\n      var d = {}\n      d[k] = val\n      debug(\"prevalidated val\", d, val, types[k])\n      if (!validate(d, k, val, types[k], typeDefs)) {\n        if (exports.invalidHandler) {\n          exports.invalidHandler(k, val, types[k], data)\n        } else if (exports.invalidHandler !== false) {\n          debug(\"invalid: \"+k+\"=\"+val, types[k])\n        }\n        return remove\n      }\n      debug(\"validated val\", d, val, types[k])\n      return d[k]\n    }).filter(function (val) { return val !== remove })\n\n    // if we allow Array specifically, then an empty array is how we\n    // express 'no value here', not null.  Allow it.\n    if (!val.length && type.indexOf(Array) === -1) {\n      debug('VAL HAS NO LENGTH, DELETE IT', val, k, type.indexOf(Array))\n      delete data[k]\n    }\n    else if (isArray) {\n      debug(isArray, data[k], val)\n      data[k] = val\n    } else data[k] = val[0]\n\n    debug(\"k=%s val=%j\", k, val, data[k])\n  })\n}\n\nfunction validateString (data, k, val) {\n  data[k] = String(val)\n}\n\nfunction validatePath (data, k, val) {\n  if (val === true) return false\n  if (val === null) return true\n\n  val = String(val)\n\n  var isWin       = process.platform === 'win32'\n    , homePattern = isWin ? /^~(\\/|\\\\)/ : /^~\\//\n    , home        = os.homedir()\n\n  if (home && val.match(homePattern)) {\n    data[k] = path.resolve(home, val.substr(2))\n  } else {\n    data[k] = path.resolve(val)\n  }\n  return true\n}\n\nfunction validateNumber (data, k, val) {\n  debug(\"validate Number %j %j %j\", k, val, isNaN(val))\n  if (isNaN(val)) return false\n  data[k] = +val\n}\n\nfunction validateDate (data, k, val) {\n  var s = Date.parse(val)\n  debug(\"validate Date %j %j %j\", k, val, s)\n  if (isNaN(s)) return false\n  data[k] = new Date(val)\n}\n\nfunction validateBoolean (data, k, val) {\n  if (val instanceof Boolean) val = val.valueOf()\n  else if (typeof val === \"string\") {\n    if (!isNaN(val)) val = !!(+val)\n    else if (val === \"null\" || val === \"false\") val = false\n    else val = true\n  } else val = !!val\n  data[k] = val\n}\n\nfunction validateUrl (data, k, val) {\n  val = url.parse(String(val))\n  if (!val.host) return false\n  data[k] = val.href\n}\n\nfunction validateStream (data, k, val) {\n  if (!(val instanceof Stream)) return false\n  data[k] = val\n}\n\nfunction validate (data, k, val, type, typeDefs) {\n  // arrays are lists of types.\n  if (Array.isArray(type)) {\n    for (var i = 0, l = type.length; i < l; i ++) {\n      if (type[i] === Array) continue\n      if (validate(data, k, val, type[i], typeDefs)) return true\n    }\n    delete data[k]\n    return false\n  }\n\n  // an array of anything?\n  if (type === Array) return true\n\n  // NaN is poisonous.  Means that something is not allowed.\n  if (type !== type) {\n    debug(\"Poison NaN\", k, val, type)\n    delete data[k]\n    return false\n  }\n\n  // explicit list of values\n  if (val === type) {\n    debug(\"Explicitly allowed %j\", val)\n    // if (isArray) (data[k] = data[k] || []).push(val)\n    // else data[k] = val\n    data[k] = val\n    return true\n  }\n\n  // now go through the list of typeDefs, validate against each one.\n  var ok = false\n    , types = Object.keys(typeDefs)\n  for (var i = 0, l = types.length; i < l; i ++) {\n    debug(\"test type %j %j %j\", k, val, types[i])\n    var t = typeDefs[types[i]]\n    if (t &&\n      ((type && type.name && t.type && t.type.name) ? (type.name === t.type.name) : (type === t.type))) {\n      var d = {}\n      ok = false !== t.validate(d, k, val)\n      val = d[k]\n      if (ok) {\n        // if (isArray) (data[k] = data[k] || []).push(val)\n        // else data[k] = val\n        data[k] = val\n        break\n      }\n    }\n  }\n  debug(\"OK? %j (%j %j %j)\", ok, k, val, types[i])\n\n  if (!ok) delete data[k]\n  return ok\n}\n\nfunction parse (args, data, remain, types, shorthands) {\n  debug(\"parse\", args, data, remain)\n\n  var key = null\n    , abbrevs = abbrev(Object.keys(types))\n    , shortAbbr = abbrev(Object.keys(shorthands))\n\n  for (var i = 0; i < args.length; i ++) {\n    var arg = args[i]\n    debug(\"arg\", arg)\n\n    if (arg.match(/^-{2,}$/)) {\n      // done with keys.\n      // the rest are args.\n      remain.push.apply(remain, args.slice(i + 1))\n      args[i] = \"--\"\n      break\n    }\n    var hadEq = false\n    if (arg.charAt(0) === \"-\" && arg.length > 1) {\n      var at = arg.indexOf('=')\n      if (at > -1) {\n        hadEq = true\n        var v = arg.substr(at + 1)\n        arg = arg.substr(0, at)\n        args.splice(i, 1, arg, v)\n      }\n\n      // see if it's a shorthand\n      // if so, splice and back up to re-parse it.\n      var shRes = resolveShort(arg, shorthands, shortAbbr, abbrevs)\n      debug(\"arg=%j shRes=%j\", arg, shRes)\n      if (shRes) {\n        debug(arg, shRes)\n        args.splice.apply(args, [i, 1].concat(shRes))\n        if (arg !== shRes[0]) {\n          i --\n          continue\n        }\n      }\n      arg = arg.replace(/^-+/, \"\")\n      var no = null\n      while (arg.toLowerCase().indexOf(\"no-\") === 0) {\n        no = !no\n        arg = arg.substr(3)\n      }\n\n      if (abbrevs[arg]) arg = abbrevs[arg]\n\n      var argType = types[arg]\n      var isTypeArray = Array.isArray(argType)\n      if (isTypeArray && argType.length === 1) {\n        isTypeArray = false\n        argType = argType[0]\n      }\n\n      var isArray = argType === Array ||\n        isTypeArray && argType.indexOf(Array) !== -1\n\n      // allow unknown things to be arrays if specified multiple times.\n      if (!types.hasOwnProperty(arg) && data.hasOwnProperty(arg)) {\n        if (!Array.isArray(data[arg]))\n          data[arg] = [data[arg]]\n        isArray = true\n      }\n\n      var val\n        , la = args[i + 1]\n\n      var isBool = typeof no === 'boolean' ||\n        argType === Boolean ||\n        isTypeArray && argType.indexOf(Boolean) !== -1 ||\n        (typeof argType === 'undefined' && !hadEq) ||\n        (la === \"false\" &&\n         (argType === null ||\n          isTypeArray && ~argType.indexOf(null)))\n\n      if (isBool) {\n        // just set and move along\n        val = !no\n        // however, also support --bool true or --bool false\n        if (la === \"true\" || la === \"false\") {\n          val = JSON.parse(la)\n          la = null\n          if (no) val = !val\n          i ++\n        }\n\n        // also support \"foo\":[Boolean, \"bar\"] and \"--foo bar\"\n        if (isTypeArray && la) {\n          if (~argType.indexOf(la)) {\n            // an explicit type\n            val = la\n            i ++\n          } else if ( la === \"null\" && ~argType.indexOf(null) ) {\n            // null allowed\n            val = null\n            i ++\n          } else if ( !la.match(/^-{2,}[^-]/) &&\n                      !isNaN(la) &&\n                      ~argType.indexOf(Number) ) {\n            // number\n            val = +la\n            i ++\n          } else if ( !la.match(/^-[^-]/) && ~argType.indexOf(String) ) {\n            // string\n            val = la\n            i ++\n          }\n        }\n\n        if (isArray) (data[arg] = data[arg] || []).push(val)\n        else data[arg] = val\n\n        continue\n      }\n\n      if (argType === String) {\n        if (la === undefined) {\n          la = \"\"\n        } else if (la.match(/^-{1,2}[^-]+/)) {\n          la = \"\"\n          i --\n        }\n      }\n\n      if (la && la.match(/^-{2,}$/)) {\n        la = undefined\n        i --\n      }\n\n      val = la === undefined ? true : la\n      if (isArray) (data[arg] = data[arg] || []).push(val)\n      else data[arg] = val\n\n      i ++\n      continue\n    }\n    remain.push(arg)\n  }\n}\n\nfunction resolveShort (arg, shorthands, shortAbbr, abbrevs) {\n  // handle single-char shorthands glommed together, like\n  // npm ls -glp, but only if there is one dash, and only if\n  // all of the chars are single-char shorthands, and it's\n  // not a match to some other abbrev.\n  arg = arg.replace(/^-+/, '')\n\n  // if it's an exact known option, then don't go any further\n  if (abbrevs[arg] === arg)\n    return null\n\n  // if it's an exact known shortopt, same deal\n  if (shorthands[arg]) {\n    // make it an array, if it's a list of words\n    if (shorthands[arg] && !Array.isArray(shorthands[arg]))\n      shorthands[arg] = shorthands[arg].split(/\\s+/)\n\n    return shorthands[arg]\n  }\n\n  // first check to see if this arg is a set of single-char shorthands\n  var singles = shorthands.___singles\n  if (!singles) {\n    singles = Object.keys(shorthands).filter(function (s) {\n      return s.length === 1\n    }).reduce(function (l,r) {\n      l[r] = true\n      return l\n    }, {})\n    shorthands.___singles = singles\n    debug('shorthand singles', singles)\n  }\n\n  var chrs = arg.split(\"\").filter(function (c) {\n    return singles[c]\n  })\n\n  if (chrs.join(\"\") === arg) return chrs.map(function (c) {\n    return shorthands[c]\n  }).reduce(function (l, r) {\n    return l.concat(r)\n  }, [])\n\n\n  // if it's an arg abbrev, and not a literal shorthand, then prefer the arg\n  if (abbrevs[arg] && !shorthands[arg])\n    return null\n\n  // if it's an abbr for a shorthand, then use that\n  if (shortAbbr[arg])\n    arg = shortAbbr[arg]\n\n  // make it an array, if it's a list of words\n  if (shorthands[arg] && !Array.isArray(shorthands[arg]))\n    shorthands[arg] = shorthands[arg].split(/\\s+/)\n\n  return shorthands[arg]\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}