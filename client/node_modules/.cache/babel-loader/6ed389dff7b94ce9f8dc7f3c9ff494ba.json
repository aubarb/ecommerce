{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIdentityCard;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isInt = _interopRequireDefault(require(\"./isInt\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar validators = {\n  PL: function PL(str) {\n    (0, _assertString.default)(str);\n    var weightOfDigits = {\n      1: 1,\n      2: 3,\n      3: 7,\n      4: 9,\n      5: 1,\n      6: 3,\n      7: 7,\n      8: 9,\n      9: 1,\n      10: 3,\n      11: 0\n    };\n\n    if (str != null && str.length === 11 && (0, _isInt.default)(str, {\n      allow_leading_zeroes: true\n    })) {\n      var digits = str.split('').slice(0, -1);\n      var sum = digits.reduce(function (acc, digit, index) {\n        return acc + Number(digit) * weightOfDigits[index + 1];\n      }, 0);\n      var modulo = sum % 10;\n      var lastDigit = Number(str.charAt(str.length - 1));\n\n      if (modulo === 0 && lastDigit === 0 || lastDigit === 10 - modulo) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n  ES: function ES(str) {\n    (0, _assertString.default)(str);\n    var DNI = /^[0-9X-Z][0-9]{7}[TRWAGMYFPDXBNJZSQVHLCKE]$/;\n    var charsValue = {\n      X: 0,\n      Y: 1,\n      Z: 2\n    };\n    var controlDigits = ['T', 'R', 'W', 'A', 'G', 'M', 'Y', 'F', 'P', 'D', 'X', 'B', 'N', 'J', 'Z', 'S', 'Q', 'V', 'H', 'L', 'C', 'K', 'E']; // sanitize user input\n\n    var sanitized = str.trim().toUpperCase(); // validate the data structure\n\n    if (!DNI.test(sanitized)) {\n      return false;\n    } // validate the control digit\n\n\n    var number = sanitized.slice(0, -1).replace(/[X,Y,Z]/g, function (char) {\n      return charsValue[char];\n    });\n    return sanitized.endsWith(controlDigits[number % 23]);\n  },\n  FI: function FI(str) {\n    // https://dvv.fi/en/personal-identity-code#:~:text=control%20character%20for%20a-,personal,-identity%20code%20calculated\n    (0, _assertString.default)(str);\n\n    if (str.length !== 11) {\n      return false;\n    }\n\n    if (!str.match(/^\\d{6}[\\-A\\+]\\d{3}[0-9ABCDEFHJKLMNPRSTUVWXY]{1}$/)) {\n      return false;\n    }\n\n    var checkDigits = '0123456789ABCDEFHJKLMNPRSTUVWXY';\n    var idAsNumber = parseInt(str.slice(0, 6), 10) * 1000 + parseInt(str.slice(7, 10), 10);\n    var remainder = idAsNumber % 31;\n    var checkDigit = checkDigits[remainder];\n    return checkDigit === str.slice(10, 11);\n  },\n  IN: function IN(str) {\n    var DNI = /^[1-9]\\d{3}\\s?\\d{4}\\s?\\d{4}$/; // multiplication table\n\n    var d = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 0, 6, 7, 8, 9, 5], [2, 3, 4, 0, 1, 7, 8, 9, 5, 6], [3, 4, 0, 1, 2, 8, 9, 5, 6, 7], [4, 0, 1, 2, 3, 9, 5, 6, 7, 8], [5, 9, 8, 7, 6, 0, 4, 3, 2, 1], [6, 5, 9, 8, 7, 1, 0, 4, 3, 2], [7, 6, 5, 9, 8, 2, 1, 0, 4, 3], [8, 7, 6, 5, 9, 3, 2, 1, 0, 4], [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]]; // permutation table\n\n    var p = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 5, 7, 6, 2, 8, 3, 0, 9, 4], [5, 8, 0, 3, 7, 9, 6, 1, 4, 2], [8, 9, 1, 6, 0, 4, 3, 5, 2, 7], [9, 4, 5, 3, 1, 2, 6, 8, 7, 0], [4, 2, 8, 6, 5, 7, 3, 9, 0, 1], [2, 7, 9, 3, 8, 0, 6, 4, 1, 5], [7, 0, 4, 6, 9, 1, 3, 2, 5, 8]]; // sanitize user input\n\n    var sanitized = str.trim(); // validate the data structure\n\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n\n    var c = 0;\n    var invertedArray = sanitized.replace(/\\s/g, '').split('').map(Number).reverse();\n    invertedArray.forEach(function (val, i) {\n      c = d[c][p[i % 8][val]];\n    });\n    return c === 0;\n  },\n  IR: function IR(str) {\n    if (!str.match(/^\\d{10}$/)) return false;\n    str = \"0000\".concat(str).substr(str.length - 6);\n    if (parseInt(str.substr(3, 6), 10) === 0) return false;\n    var lastNumber = parseInt(str.substr(9, 1), 10);\n    var sum = 0;\n\n    for (var i = 0; i < 9; i++) {\n      sum += parseInt(str.substr(i, 1), 10) * (10 - i);\n    }\n\n    sum %= 11;\n    return sum < 2 && lastNumber === sum || sum >= 2 && lastNumber === 11 - sum;\n  },\n  IT: function IT(str) {\n    if (str.length !== 9) return false;\n    if (str === 'CA00000AA') return false; // https://it.wikipedia.org/wiki/Carta_d%27identit%C3%A0_elettronica_italiana\n\n    return str.search(/C[A-Z][0-9]{5}[A-Z]{2}/i) > -1;\n  },\n  NO: function NO(str) {\n    var sanitized = str.trim();\n    if (isNaN(Number(sanitized))) return false;\n    if (sanitized.length !== 11) return false;\n    if (sanitized === '00000000000') return false; // https://no.wikipedia.org/wiki/F%C3%B8dselsnummer\n\n    var f = sanitized.split('').map(Number);\n    var k1 = (11 - (3 * f[0] + 7 * f[1] + 6 * f[2] + 1 * f[3] + 8 * f[4] + 9 * f[5] + 4 * f[6] + 5 * f[7] + 2 * f[8]) % 11) % 11;\n    var k2 = (11 - (5 * f[0] + 4 * f[1] + 3 * f[2] + 2 * f[3] + 7 * f[4] + 6 * f[5] + 5 * f[6] + 4 * f[7] + 3 * f[8] + 2 * k1) % 11) % 11;\n    if (k1 !== f[9] || k2 !== f[10]) return false;\n    return true;\n  },\n  TH: function TH(str) {\n    if (!str.match(/^[1-8]\\d{12}$/)) return false; // validate check digit\n\n    var sum = 0;\n\n    for (var i = 0; i < 12; i++) {\n      sum += parseInt(str[i], 10) * (13 - i);\n    }\n\n    return str[12] === ((11 - sum % 11) % 10).toString();\n  },\n  LK: function LK(str) {\n    var old_nic = /^[1-9]\\d{8}[vx]$/i;\n    var new_nic = /^[1-9]\\d{11}$/i;\n    if (str.length === 10 && old_nic.test(str)) return true;else if (str.length === 12 && new_nic.test(str)) return true;\n    return false;\n  },\n  'he-IL': function heIL(str) {\n    var DNI = /^\\d{9}$/; // sanitize user input\n\n    var sanitized = str.trim(); // validate the data structure\n\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n\n    var id = sanitized;\n    var sum = 0,\n        incNum;\n\n    for (var i = 0; i < id.length; i++) {\n      incNum = Number(id[i]) * (i % 2 + 1); // Multiply number by 1 or 2\n\n      sum += incNum > 9 ? incNum - 9 : incNum; // Sum the digits up and add to total\n    }\n\n    return sum % 10 === 0;\n  },\n  'ar-LY': function arLY(str) {\n    // Libya National Identity Number NIN is 12 digits, the first digit is either 1 or 2\n    var NIN = /^(1|2)\\d{11}$/; // sanitize user input\n\n    var sanitized = str.trim(); // validate the data structure\n\n    if (!NIN.test(sanitized)) {\n      return false;\n    }\n\n    return true;\n  },\n  'ar-TN': function arTN(str) {\n    var DNI = /^\\d{8}$/; // sanitize user input\n\n    var sanitized = str.trim(); // validate the data structure\n\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n\n    return true;\n  },\n  'zh-CN': function zhCN(str) {\n    var provincesAndCities = ['11', // 北京\n    '12', // 天津\n    '13', // 河北\n    '14', // 山西\n    '15', // 内蒙古\n    '21', // 辽宁\n    '22', // 吉林\n    '23', // 黑龙江\n    '31', // 上海\n    '32', // 江苏\n    '33', // 浙江\n    '34', // 安徽\n    '35', // 福建\n    '36', // 江西\n    '37', // 山东\n    '41', // 河南\n    '42', // 湖北\n    '43', // 湖南\n    '44', // 广东\n    '45', // 广西\n    '46', // 海南\n    '50', // 重庆\n    '51', // 四川\n    '52', // 贵州\n    '53', // 云南\n    '54', // 西藏\n    '61', // 陕西\n    '62', // 甘肃\n    '63', // 青海\n    '64', // 宁夏\n    '65', // 新疆\n    '71', // 台湾\n    '81', // 香港\n    '82', // 澳门\n    '91' // 国外\n    ];\n    var powers = ['7', '9', '10', '5', '8', '4', '2', '1', '6', '3', '7', '9', '10', '5', '8', '4', '2'];\n    var parityBit = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'];\n\n    var checkAddressCode = function checkAddressCode(addressCode) {\n      return provincesAndCities.includes(addressCode);\n    };\n\n    var checkBirthDayCode = function checkBirthDayCode(birDayCode) {\n      var yyyy = parseInt(birDayCode.substring(0, 4), 10);\n      var mm = parseInt(birDayCode.substring(4, 6), 10);\n      var dd = parseInt(birDayCode.substring(6), 10);\n      var xdata = new Date(yyyy, mm - 1, dd);\n\n      if (xdata > new Date()) {\n        return false; // eslint-disable-next-line max-len\n      } else if (xdata.getFullYear() === yyyy && xdata.getMonth() === mm - 1 && xdata.getDate() === dd) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var getParityBit = function getParityBit(idCardNo) {\n      var id17 = idCardNo.substring(0, 17);\n      var power = 0;\n\n      for (var i = 0; i < 17; i++) {\n        power += parseInt(id17.charAt(i), 10) * parseInt(powers[i], 10);\n      }\n\n      var mod = power % 11;\n      return parityBit[mod];\n    };\n\n    var checkParityBit = function checkParityBit(idCardNo) {\n      return getParityBit(idCardNo) === idCardNo.charAt(17).toUpperCase();\n    };\n\n    var check15IdCardNo = function check15IdCardNo(idCardNo) {\n      var check = /^[1-9]\\d{7}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\\d{3}$/.test(idCardNo);\n      if (!check) return false;\n      var addressCode = idCardNo.substring(0, 2);\n      check = checkAddressCode(addressCode);\n      if (!check) return false;\n      var birDayCode = \"19\".concat(idCardNo.substring(6, 12));\n      check = checkBirthDayCode(birDayCode);\n      if (!check) return false;\n      return true;\n    };\n\n    var check18IdCardNo = function check18IdCardNo(idCardNo) {\n      var check = /^[1-9]\\d{5}[1-9]\\d{3}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\\d{3}(\\d|x|X)$/.test(idCardNo);\n      if (!check) return false;\n      var addressCode = idCardNo.substring(0, 2);\n      check = checkAddressCode(addressCode);\n      if (!check) return false;\n      var birDayCode = idCardNo.substring(6, 14);\n      check = checkBirthDayCode(birDayCode);\n      if (!check) return false;\n      return checkParityBit(idCardNo);\n    };\n\n    var checkIdCardNo = function checkIdCardNo(idCardNo) {\n      var check = /^\\d{15}|(\\d{17}(\\d|x|X))$/.test(idCardNo);\n      if (!check) return false;\n\n      if (idCardNo.length === 15) {\n        return check15IdCardNo(idCardNo);\n      }\n\n      return check18IdCardNo(idCardNo);\n    };\n\n    return checkIdCardNo(str);\n  },\n  'zh-TW': function zhTW(str) {\n    var ALPHABET_CODES = {\n      A: 10,\n      B: 11,\n      C: 12,\n      D: 13,\n      E: 14,\n      F: 15,\n      G: 16,\n      H: 17,\n      I: 34,\n      J: 18,\n      K: 19,\n      L: 20,\n      M: 21,\n      N: 22,\n      O: 35,\n      P: 23,\n      Q: 24,\n      R: 25,\n      S: 26,\n      T: 27,\n      U: 28,\n      V: 29,\n      W: 32,\n      X: 30,\n      Y: 31,\n      Z: 33\n    };\n    var sanitized = str.trim().toUpperCase();\n    if (!/^[A-Z][0-9]{9}$/.test(sanitized)) return false;\n    return Array.from(sanitized).reduce(function (sum, number, index) {\n      if (index === 0) {\n        var code = ALPHABET_CODES[number];\n        return code % 10 * 9 + Math.floor(code / 10);\n      }\n\n      if (index === 9) {\n        return (10 - sum % 10 - Number(number)) % 10 === 0;\n      }\n\n      return sum + Number(number) * (9 - index);\n    }, 0);\n  }\n};\n\nfunction isIdentityCard(str, locale) {\n  (0, _assertString.default)(str);\n\n  if (locale in validators) {\n    return validators[locale](str);\n  } else if (locale === 'any') {\n    for (var key in validators) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (validators.hasOwnProperty(key)) {\n        var validator = validators[key];\n\n        if (validator(str)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","isIdentityCard","_assertString","_interopRequireDefault","require","_isInt","obj","__esModule","validators","PL","str","weightOfDigits","length","allow_leading_zeroes","digits","split","slice","sum","reduce","acc","digit","index","Number","modulo","lastDigit","charAt","ES","DNI","charsValue","X","Y","Z","controlDigits","sanitized","trim","toUpperCase","test","number","replace","char","endsWith","FI","match","checkDigits","idAsNumber","parseInt","remainder","checkDigit","IN","d","p","c","invertedArray","map","reverse","forEach","val","i","IR","concat","substr","lastNumber","IT","search","NO","isNaN","f","k1","k2","TH","toString","LK","old_nic","new_nic","heIL","id","incNum","arLY","NIN","arTN","zhCN","provincesAndCities","powers","parityBit","checkAddressCode","addressCode","includes","checkBirthDayCode","birDayCode","yyyy","substring","mm","dd","xdata","Date","getFullYear","getMonth","getDate","getParityBit","idCardNo","id17","power","mod","checkParityBit","check15IdCardNo","check","check18IdCardNo","checkIdCardNo","zhTW","ALPHABET_CODES","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","Array","from","code","Math","floor","locale","key","hasOwnProperty","validator","Error","module"],"sources":["/Users/aurele/node_modules/validator/lib/isIdentityCard.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isIdentityCard;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isInt = _interopRequireDefault(require(\"./isInt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar validators = {\n  PL: function PL(str) {\n    (0, _assertString.default)(str);\n    var weightOfDigits = {\n      1: 1,\n      2: 3,\n      3: 7,\n      4: 9,\n      5: 1,\n      6: 3,\n      7: 7,\n      8: 9,\n      9: 1,\n      10: 3,\n      11: 0\n    };\n\n    if (str != null && str.length === 11 && (0, _isInt.default)(str, {\n      allow_leading_zeroes: true\n    })) {\n      var digits = str.split('').slice(0, -1);\n      var sum = digits.reduce(function (acc, digit, index) {\n        return acc + Number(digit) * weightOfDigits[index + 1];\n      }, 0);\n      var modulo = sum % 10;\n      var lastDigit = Number(str.charAt(str.length - 1));\n\n      if (modulo === 0 && lastDigit === 0 || lastDigit === 10 - modulo) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n  ES: function ES(str) {\n    (0, _assertString.default)(str);\n    var DNI = /^[0-9X-Z][0-9]{7}[TRWAGMYFPDXBNJZSQVHLCKE]$/;\n    var charsValue = {\n      X: 0,\n      Y: 1,\n      Z: 2\n    };\n    var controlDigits = ['T', 'R', 'W', 'A', 'G', 'M', 'Y', 'F', 'P', 'D', 'X', 'B', 'N', 'J', 'Z', 'S', 'Q', 'V', 'H', 'L', 'C', 'K', 'E']; // sanitize user input\n\n    var sanitized = str.trim().toUpperCase(); // validate the data structure\n\n    if (!DNI.test(sanitized)) {\n      return false;\n    } // validate the control digit\n\n\n    var number = sanitized.slice(0, -1).replace(/[X,Y,Z]/g, function (char) {\n      return charsValue[char];\n    });\n    return sanitized.endsWith(controlDigits[number % 23]);\n  },\n  FI: function FI(str) {\n    // https://dvv.fi/en/personal-identity-code#:~:text=control%20character%20for%20a-,personal,-identity%20code%20calculated\n    (0, _assertString.default)(str);\n\n    if (str.length !== 11) {\n      return false;\n    }\n\n    if (!str.match(/^\\d{6}[\\-A\\+]\\d{3}[0-9ABCDEFHJKLMNPRSTUVWXY]{1}$/)) {\n      return false;\n    }\n\n    var checkDigits = '0123456789ABCDEFHJKLMNPRSTUVWXY';\n    var idAsNumber = parseInt(str.slice(0, 6), 10) * 1000 + parseInt(str.slice(7, 10), 10);\n    var remainder = idAsNumber % 31;\n    var checkDigit = checkDigits[remainder];\n    return checkDigit === str.slice(10, 11);\n  },\n  IN: function IN(str) {\n    var DNI = /^[1-9]\\d{3}\\s?\\d{4}\\s?\\d{4}$/; // multiplication table\n\n    var d = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 0, 6, 7, 8, 9, 5], [2, 3, 4, 0, 1, 7, 8, 9, 5, 6], [3, 4, 0, 1, 2, 8, 9, 5, 6, 7], [4, 0, 1, 2, 3, 9, 5, 6, 7, 8], [5, 9, 8, 7, 6, 0, 4, 3, 2, 1], [6, 5, 9, 8, 7, 1, 0, 4, 3, 2], [7, 6, 5, 9, 8, 2, 1, 0, 4, 3], [8, 7, 6, 5, 9, 3, 2, 1, 0, 4], [9, 8, 7, 6, 5, 4, 3, 2, 1, 0]]; // permutation table\n\n    var p = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 5, 7, 6, 2, 8, 3, 0, 9, 4], [5, 8, 0, 3, 7, 9, 6, 1, 4, 2], [8, 9, 1, 6, 0, 4, 3, 5, 2, 7], [9, 4, 5, 3, 1, 2, 6, 8, 7, 0], [4, 2, 8, 6, 5, 7, 3, 9, 0, 1], [2, 7, 9, 3, 8, 0, 6, 4, 1, 5], [7, 0, 4, 6, 9, 1, 3, 2, 5, 8]]; // sanitize user input\n\n    var sanitized = str.trim(); // validate the data structure\n\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n\n    var c = 0;\n    var invertedArray = sanitized.replace(/\\s/g, '').split('').map(Number).reverse();\n    invertedArray.forEach(function (val, i) {\n      c = d[c][p[i % 8][val]];\n    });\n    return c === 0;\n  },\n  IR: function IR(str) {\n    if (!str.match(/^\\d{10}$/)) return false;\n    str = \"0000\".concat(str).substr(str.length - 6);\n    if (parseInt(str.substr(3, 6), 10) === 0) return false;\n    var lastNumber = parseInt(str.substr(9, 1), 10);\n    var sum = 0;\n\n    for (var i = 0; i < 9; i++) {\n      sum += parseInt(str.substr(i, 1), 10) * (10 - i);\n    }\n\n    sum %= 11;\n    return sum < 2 && lastNumber === sum || sum >= 2 && lastNumber === 11 - sum;\n  },\n  IT: function IT(str) {\n    if (str.length !== 9) return false;\n    if (str === 'CA00000AA') return false; // https://it.wikipedia.org/wiki/Carta_d%27identit%C3%A0_elettronica_italiana\n\n    return str.search(/C[A-Z][0-9]{5}[A-Z]{2}/i) > -1;\n  },\n  NO: function NO(str) {\n    var sanitized = str.trim();\n    if (isNaN(Number(sanitized))) return false;\n    if (sanitized.length !== 11) return false;\n    if (sanitized === '00000000000') return false; // https://no.wikipedia.org/wiki/F%C3%B8dselsnummer\n\n    var f = sanitized.split('').map(Number);\n    var k1 = (11 - (3 * f[0] + 7 * f[1] + 6 * f[2] + 1 * f[3] + 8 * f[4] + 9 * f[5] + 4 * f[6] + 5 * f[7] + 2 * f[8]) % 11) % 11;\n    var k2 = (11 - (5 * f[0] + 4 * f[1] + 3 * f[2] + 2 * f[3] + 7 * f[4] + 6 * f[5] + 5 * f[6] + 4 * f[7] + 3 * f[8] + 2 * k1) % 11) % 11;\n    if (k1 !== f[9] || k2 !== f[10]) return false;\n    return true;\n  },\n  TH: function TH(str) {\n    if (!str.match(/^[1-8]\\d{12}$/)) return false; // validate check digit\n\n    var sum = 0;\n\n    for (var i = 0; i < 12; i++) {\n      sum += parseInt(str[i], 10) * (13 - i);\n    }\n\n    return str[12] === ((11 - sum % 11) % 10).toString();\n  },\n  LK: function LK(str) {\n    var old_nic = /^[1-9]\\d{8}[vx]$/i;\n    var new_nic = /^[1-9]\\d{11}$/i;\n    if (str.length === 10 && old_nic.test(str)) return true;else if (str.length === 12 && new_nic.test(str)) return true;\n    return false;\n  },\n  'he-IL': function heIL(str) {\n    var DNI = /^\\d{9}$/; // sanitize user input\n\n    var sanitized = str.trim(); // validate the data structure\n\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n\n    var id = sanitized;\n    var sum = 0,\n        incNum;\n\n    for (var i = 0; i < id.length; i++) {\n      incNum = Number(id[i]) * (i % 2 + 1); // Multiply number by 1 or 2\n\n      sum += incNum > 9 ? incNum - 9 : incNum; // Sum the digits up and add to total\n    }\n\n    return sum % 10 === 0;\n  },\n  'ar-LY': function arLY(str) {\n    // Libya National Identity Number NIN is 12 digits, the first digit is either 1 or 2\n    var NIN = /^(1|2)\\d{11}$/; // sanitize user input\n\n    var sanitized = str.trim(); // validate the data structure\n\n    if (!NIN.test(sanitized)) {\n      return false;\n    }\n\n    return true;\n  },\n  'ar-TN': function arTN(str) {\n    var DNI = /^\\d{8}$/; // sanitize user input\n\n    var sanitized = str.trim(); // validate the data structure\n\n    if (!DNI.test(sanitized)) {\n      return false;\n    }\n\n    return true;\n  },\n  'zh-CN': function zhCN(str) {\n    var provincesAndCities = ['11', // 北京\n    '12', // 天津\n    '13', // 河北\n    '14', // 山西\n    '15', // 内蒙古\n    '21', // 辽宁\n    '22', // 吉林\n    '23', // 黑龙江\n    '31', // 上海\n    '32', // 江苏\n    '33', // 浙江\n    '34', // 安徽\n    '35', // 福建\n    '36', // 江西\n    '37', // 山东\n    '41', // 河南\n    '42', // 湖北\n    '43', // 湖南\n    '44', // 广东\n    '45', // 广西\n    '46', // 海南\n    '50', // 重庆\n    '51', // 四川\n    '52', // 贵州\n    '53', // 云南\n    '54', // 西藏\n    '61', // 陕西\n    '62', // 甘肃\n    '63', // 青海\n    '64', // 宁夏\n    '65', // 新疆\n    '71', // 台湾\n    '81', // 香港\n    '82', // 澳门\n    '91' // 国外\n    ];\n    var powers = ['7', '9', '10', '5', '8', '4', '2', '1', '6', '3', '7', '9', '10', '5', '8', '4', '2'];\n    var parityBit = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'];\n\n    var checkAddressCode = function checkAddressCode(addressCode) {\n      return provincesAndCities.includes(addressCode);\n    };\n\n    var checkBirthDayCode = function checkBirthDayCode(birDayCode) {\n      var yyyy = parseInt(birDayCode.substring(0, 4), 10);\n      var mm = parseInt(birDayCode.substring(4, 6), 10);\n      var dd = parseInt(birDayCode.substring(6), 10);\n      var xdata = new Date(yyyy, mm - 1, dd);\n\n      if (xdata > new Date()) {\n        return false; // eslint-disable-next-line max-len\n      } else if (xdata.getFullYear() === yyyy && xdata.getMonth() === mm - 1 && xdata.getDate() === dd) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var getParityBit = function getParityBit(idCardNo) {\n      var id17 = idCardNo.substring(0, 17);\n      var power = 0;\n\n      for (var i = 0; i < 17; i++) {\n        power += parseInt(id17.charAt(i), 10) * parseInt(powers[i], 10);\n      }\n\n      var mod = power % 11;\n      return parityBit[mod];\n    };\n\n    var checkParityBit = function checkParityBit(idCardNo) {\n      return getParityBit(idCardNo) === idCardNo.charAt(17).toUpperCase();\n    };\n\n    var check15IdCardNo = function check15IdCardNo(idCardNo) {\n      var check = /^[1-9]\\d{7}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\\d{3}$/.test(idCardNo);\n      if (!check) return false;\n      var addressCode = idCardNo.substring(0, 2);\n      check = checkAddressCode(addressCode);\n      if (!check) return false;\n      var birDayCode = \"19\".concat(idCardNo.substring(6, 12));\n      check = checkBirthDayCode(birDayCode);\n      if (!check) return false;\n      return true;\n    };\n\n    var check18IdCardNo = function check18IdCardNo(idCardNo) {\n      var check = /^[1-9]\\d{5}[1-9]\\d{3}((0[1-9])|(1[0-2]))((0[1-9])|([1-2][0-9])|(3[0-1]))\\d{3}(\\d|x|X)$/.test(idCardNo);\n      if (!check) return false;\n      var addressCode = idCardNo.substring(0, 2);\n      check = checkAddressCode(addressCode);\n      if (!check) return false;\n      var birDayCode = idCardNo.substring(6, 14);\n      check = checkBirthDayCode(birDayCode);\n      if (!check) return false;\n      return checkParityBit(idCardNo);\n    };\n\n    var checkIdCardNo = function checkIdCardNo(idCardNo) {\n      var check = /^\\d{15}|(\\d{17}(\\d|x|X))$/.test(idCardNo);\n      if (!check) return false;\n\n      if (idCardNo.length === 15) {\n        return check15IdCardNo(idCardNo);\n      }\n\n      return check18IdCardNo(idCardNo);\n    };\n\n    return checkIdCardNo(str);\n  },\n  'zh-TW': function zhTW(str) {\n    var ALPHABET_CODES = {\n      A: 10,\n      B: 11,\n      C: 12,\n      D: 13,\n      E: 14,\n      F: 15,\n      G: 16,\n      H: 17,\n      I: 34,\n      J: 18,\n      K: 19,\n      L: 20,\n      M: 21,\n      N: 22,\n      O: 35,\n      P: 23,\n      Q: 24,\n      R: 25,\n      S: 26,\n      T: 27,\n      U: 28,\n      V: 29,\n      W: 32,\n      X: 30,\n      Y: 31,\n      Z: 33\n    };\n    var sanitized = str.trim().toUpperCase();\n    if (!/^[A-Z][0-9]{9}$/.test(sanitized)) return false;\n    return Array.from(sanitized).reduce(function (sum, number, index) {\n      if (index === 0) {\n        var code = ALPHABET_CODES[number];\n        return code % 10 * 9 + Math.floor(code / 10);\n      }\n\n      if (index === 9) {\n        return (10 - sum % 10 - Number(number)) % 10 === 0;\n      }\n\n      return sum + Number(number) * (9 - index);\n    }, 0);\n  }\n};\n\nfunction isIdentityCard(str, locale) {\n  (0, _assertString.default)(str);\n\n  if (locale in validators) {\n    return validators[locale](str);\n  } else if (locale === 'any') {\n    for (var key in validators) {\n      // https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md#ignoring-code-for-coverage-purposes\n      // istanbul ignore else\n      if (validators.hasOwnProperty(key)) {\n        var validator = validators[key];\n\n        if (validator(str)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  throw new Error(\"Invalid locale '\".concat(locale, \"'\"));\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}