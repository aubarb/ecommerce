{"ast":null,"code":"import { baseUrl } from \"../api/baseUrl\";\nimport axios from \"axios\";\nexport const getOrders = async user_id => {\n  try {\n    const result = await axios(`${baseUrl}/orders/${user_id}`);\n    const data = result.data;\n    return data;\n  } catch (error) {\n    console.error(error.reponse.data);\n  }\n};\nexport const getOrderItems = async order_id => {\n  try {\n    const result = await axios.post(`${baseUrl}/order_items`, {\n      order_id\n    });\n    const data = result.data;\n    return data;\n  } catch (error) {\n    return error.response.data;\n  }\n};","map":{"version":3,"names":["baseUrl","axios","getOrders","user_id","result","data","error","console","reponse","getOrderItems","order_id","post","response"],"sources":["/Users/aurele/Desktop/E-Commerce App/views/src/api/orders.js"],"sourcesContent":["import { baseUrl } from \"../api/baseUrl\";\nimport axios from \"axios\";\n\nexport const getOrders = async (user_id) => {\n  try {\n    const result = await axios(`${baseUrl}/orders/${user_id}`);\n    const data = result.data;\n    return data;\n  } catch (error) {\n    console.error(error.reponse.data);\n  }\n};\n\nexport const getOrderItems = async (order_id) => {\n  try {\n    const result = await axios.post(`${baseUrl}/order_items`, {order_id});\n    const data = result.data;\n    return data;\n  } catch (error) {\n    return error.response.data;\n  }\n};\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,gBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAOC,OAAP,IAAmB;EAC1C,IAAI;IACF,MAAMC,MAAM,GAAG,MAAMH,KAAK,CAAE,GAAED,OAAQ,WAAUG,OAAQ,EAA9B,CAA1B;IACA,MAAME,IAAI,GAAGD,MAAM,CAACC,IAApB;IACA,OAAOA,IAAP;EACD,CAJD,CAIE,OAAOC,KAAP,EAAc;IACdC,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACE,OAAN,CAAcH,IAA5B;EACD;AACF,CARM;AAUP,OAAO,MAAMI,aAAa,GAAG,MAAOC,QAAP,IAAoB;EAC/C,IAAI;IACF,MAAMN,MAAM,GAAG,MAAMH,KAAK,CAACU,IAAN,CAAY,GAAEX,OAAQ,cAAtB,EAAqC;MAACU;IAAD,CAArC,CAArB;IACA,MAAML,IAAI,GAAGD,MAAM,CAACC,IAApB;IACA,OAAOA,IAAP;EACD,CAJD,CAIE,OAAOC,KAAP,EAAc;IACd,OAAOA,KAAK,CAACM,QAAN,CAAeP,IAAtB;EACD;AACF,CARM"},"metadata":{},"sourceType":"module"}