{"ast":null,"code":"module.exports = BinaryWriter;\n\nfunction BinaryWriter(size, allowResize) {\n  this.buffer = new Buffer(size);\n  this.position = 0;\n  this.allowResize = allowResize;\n}\n\nfunction _write(write, size) {\n  return function (value, noAssert) {\n    this.ensureSize(size);\n    write.call(this.buffer, value, this.position, noAssert);\n    this.position += size;\n  };\n}\n\nBinaryWriter.prototype.writeUInt8 = _write(Buffer.prototype.writeUInt8, 1);\nBinaryWriter.prototype.writeUInt16LE = _write(Buffer.prototype.writeUInt16LE, 2);\nBinaryWriter.prototype.writeUInt16BE = _write(Buffer.prototype.writeUInt16BE, 2);\nBinaryWriter.prototype.writeUInt32LE = _write(Buffer.prototype.writeUInt32LE, 4);\nBinaryWriter.prototype.writeUInt32BE = _write(Buffer.prototype.writeUInt32BE, 4);\nBinaryWriter.prototype.writeInt8 = _write(Buffer.prototype.writeInt8, 1);\nBinaryWriter.prototype.writeInt16LE = _write(Buffer.prototype.writeInt16LE, 2);\nBinaryWriter.prototype.writeInt16BE = _write(Buffer.prototype.writeInt16BE, 2);\nBinaryWriter.prototype.writeInt32LE = _write(Buffer.prototype.writeInt32LE, 4);\nBinaryWriter.prototype.writeInt32BE = _write(Buffer.prototype.writeInt32BE, 4);\nBinaryWriter.prototype.writeFloatLE = _write(Buffer.prototype.writeFloatLE, 4);\nBinaryWriter.prototype.writeFloatBE = _write(Buffer.prototype.writeFloatBE, 4);\nBinaryWriter.prototype.writeDoubleLE = _write(Buffer.prototype.writeDoubleLE, 8);\nBinaryWriter.prototype.writeDoubleBE = _write(Buffer.prototype.writeDoubleBE, 8);\n\nBinaryWriter.prototype.writeBuffer = function (buffer) {\n  this.ensureSize(buffer.length);\n  buffer.copy(this.buffer, this.position, 0, buffer.length);\n  this.position += buffer.length;\n};\n\nBinaryWriter.prototype.writeVarInt = function (value) {\n  var length = 1;\n\n  while ((value & 0xFFFFFF80) !== 0) {\n    this.writeUInt8(value & 0x7F | 0x80);\n    value >>>= 7;\n    length++;\n  }\n\n  this.writeUInt8(value & 0x7F);\n  return length;\n};\n\nBinaryWriter.prototype.ensureSize = function (size) {\n  if (this.buffer.length < this.position + size) {\n    if (this.allowResize) {\n      var tempBuffer = new Buffer(this.position + size);\n      this.buffer.copy(tempBuffer, 0, 0, this.buffer.length);\n      this.buffer = tempBuffer;\n    } else {\n      throw new RangeError('index out of range');\n    }\n  }\n};","map":{"version":3,"names":["module","exports","BinaryWriter","size","allowResize","buffer","Buffer","position","_write","write","value","noAssert","ensureSize","call","prototype","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","writeBuffer","length","copy","writeVarInt","tempBuffer","RangeError"],"sources":["/Users/aurele/node_modules/wkx/lib/binarywriter.js"],"sourcesContent":["module.exports = BinaryWriter;\r\n\r\nfunction BinaryWriter(size, allowResize) {\r\n    this.buffer = new Buffer(size);\r\n    this.position = 0;\r\n    this.allowResize = allowResize;\r\n}\r\n\r\nfunction _write(write, size) {\r\n    return function (value, noAssert) {\r\n        this.ensureSize(size);\r\n\r\n        write.call(this.buffer, value, this.position, noAssert);\r\n        this.position += size;\r\n    };\r\n}\r\n\r\nBinaryWriter.prototype.writeUInt8 = _write(Buffer.prototype.writeUInt8, 1);\r\nBinaryWriter.prototype.writeUInt16LE = _write(Buffer.prototype.writeUInt16LE, 2);\r\nBinaryWriter.prototype.writeUInt16BE = _write(Buffer.prototype.writeUInt16BE, 2);\r\nBinaryWriter.prototype.writeUInt32LE = _write(Buffer.prototype.writeUInt32LE, 4);\r\nBinaryWriter.prototype.writeUInt32BE = _write(Buffer.prototype.writeUInt32BE, 4);\r\nBinaryWriter.prototype.writeInt8 = _write(Buffer.prototype.writeInt8, 1);\r\nBinaryWriter.prototype.writeInt16LE = _write(Buffer.prototype.writeInt16LE, 2);\r\nBinaryWriter.prototype.writeInt16BE = _write(Buffer.prototype.writeInt16BE, 2);\r\nBinaryWriter.prototype.writeInt32LE = _write(Buffer.prototype.writeInt32LE, 4);\r\nBinaryWriter.prototype.writeInt32BE = _write(Buffer.prototype.writeInt32BE, 4);\r\nBinaryWriter.prototype.writeFloatLE = _write(Buffer.prototype.writeFloatLE, 4);\r\nBinaryWriter.prototype.writeFloatBE = _write(Buffer.prototype.writeFloatBE, 4);\r\nBinaryWriter.prototype.writeDoubleLE = _write(Buffer.prototype.writeDoubleLE, 8);\r\nBinaryWriter.prototype.writeDoubleBE = _write(Buffer.prototype.writeDoubleBE, 8);\r\n\r\nBinaryWriter.prototype.writeBuffer = function (buffer) {\r\n    this.ensureSize(buffer.length);\r\n\r\n    buffer.copy(this.buffer, this.position, 0, buffer.length);\r\n    this.position += buffer.length;\r\n};\r\n\r\nBinaryWriter.prototype.writeVarInt = function (value) {\r\n    var length = 1;\r\n\r\n    while ((value & 0xFFFFFF80) !== 0) {\r\n        this.writeUInt8((value & 0x7F) | 0x80);\r\n        value >>>= 7;\r\n        length++;\r\n    }\r\n\r\n    this.writeUInt8(value & 0x7F);\r\n\r\n    return length;\r\n};\r\n\r\nBinaryWriter.prototype.ensureSize = function (size) {\r\n    if (this.buffer.length < this.position + size) {\r\n        if (this.allowResize) {\r\n            var tempBuffer = new Buffer(this.position + size);\r\n            this.buffer.copy(tempBuffer, 0, 0, this.buffer.length);\r\n            this.buffer = tempBuffer;\r\n        }\r\n        else {\r\n            throw new RangeError('index out of range');\r\n        }\r\n    }\r\n};\r\n"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,YAAjB;;AAEA,SAASA,YAAT,CAAsBC,IAAtB,EAA4BC,WAA5B,EAAyC;EACrC,KAAKC,MAAL,GAAc,IAAIC,MAAJ,CAAWH,IAAX,CAAd;EACA,KAAKI,QAAL,GAAgB,CAAhB;EACA,KAAKH,WAAL,GAAmBA,WAAnB;AACH;;AAED,SAASI,MAAT,CAAgBC,KAAhB,EAAuBN,IAAvB,EAA6B;EACzB,OAAO,UAAUO,KAAV,EAAiBC,QAAjB,EAA2B;IAC9B,KAAKC,UAAL,CAAgBT,IAAhB;IAEAM,KAAK,CAACI,IAAN,CAAW,KAAKR,MAAhB,EAAwBK,KAAxB,EAA+B,KAAKH,QAApC,EAA8CI,QAA9C;IACA,KAAKJ,QAAL,IAAiBJ,IAAjB;EACH,CALD;AAMH;;AAEDD,YAAY,CAACY,SAAb,CAAuBC,UAAvB,GAAoCP,MAAM,CAACF,MAAM,CAACQ,SAAP,CAAiBC,UAAlB,EAA8B,CAA9B,CAA1C;AACAb,YAAY,CAACY,SAAb,CAAuBE,aAAvB,GAAuCR,MAAM,CAACF,MAAM,CAACQ,SAAP,CAAiBE,aAAlB,EAAiC,CAAjC,CAA7C;AACAd,YAAY,CAACY,SAAb,CAAuBG,aAAvB,GAAuCT,MAAM,CAACF,MAAM,CAACQ,SAAP,CAAiBG,aAAlB,EAAiC,CAAjC,CAA7C;AACAf,YAAY,CAACY,SAAb,CAAuBI,aAAvB,GAAuCV,MAAM,CAACF,MAAM,CAACQ,SAAP,CAAiBI,aAAlB,EAAiC,CAAjC,CAA7C;AACAhB,YAAY,CAACY,SAAb,CAAuBK,aAAvB,GAAuCX,MAAM,CAACF,MAAM,CAACQ,SAAP,CAAiBK,aAAlB,EAAiC,CAAjC,CAA7C;AACAjB,YAAY,CAACY,SAAb,CAAuBM,SAAvB,GAAmCZ,MAAM,CAACF,MAAM,CAACQ,SAAP,CAAiBM,SAAlB,EAA6B,CAA7B,CAAzC;AACAlB,YAAY,CAACY,SAAb,CAAuBO,YAAvB,GAAsCb,MAAM,CAACF,MAAM,CAACQ,SAAP,CAAiBO,YAAlB,EAAgC,CAAhC,CAA5C;AACAnB,YAAY,CAACY,SAAb,CAAuBQ,YAAvB,GAAsCd,MAAM,CAACF,MAAM,CAACQ,SAAP,CAAiBQ,YAAlB,EAAgC,CAAhC,CAA5C;AACApB,YAAY,CAACY,SAAb,CAAuBS,YAAvB,GAAsCf,MAAM,CAACF,MAAM,CAACQ,SAAP,CAAiBS,YAAlB,EAAgC,CAAhC,CAA5C;AACArB,YAAY,CAACY,SAAb,CAAuBU,YAAvB,GAAsChB,MAAM,CAACF,MAAM,CAACQ,SAAP,CAAiBU,YAAlB,EAAgC,CAAhC,CAA5C;AACAtB,YAAY,CAACY,SAAb,CAAuBW,YAAvB,GAAsCjB,MAAM,CAACF,MAAM,CAACQ,SAAP,CAAiBW,YAAlB,EAAgC,CAAhC,CAA5C;AACAvB,YAAY,CAACY,SAAb,CAAuBY,YAAvB,GAAsClB,MAAM,CAACF,MAAM,CAACQ,SAAP,CAAiBY,YAAlB,EAAgC,CAAhC,CAA5C;AACAxB,YAAY,CAACY,SAAb,CAAuBa,aAAvB,GAAuCnB,MAAM,CAACF,MAAM,CAACQ,SAAP,CAAiBa,aAAlB,EAAiC,CAAjC,CAA7C;AACAzB,YAAY,CAACY,SAAb,CAAuBc,aAAvB,GAAuCpB,MAAM,CAACF,MAAM,CAACQ,SAAP,CAAiBc,aAAlB,EAAiC,CAAjC,CAA7C;;AAEA1B,YAAY,CAACY,SAAb,CAAuBe,WAAvB,GAAqC,UAAUxB,MAAV,EAAkB;EACnD,KAAKO,UAAL,CAAgBP,MAAM,CAACyB,MAAvB;EAEAzB,MAAM,CAAC0B,IAAP,CAAY,KAAK1B,MAAjB,EAAyB,KAAKE,QAA9B,EAAwC,CAAxC,EAA2CF,MAAM,CAACyB,MAAlD;EACA,KAAKvB,QAAL,IAAiBF,MAAM,CAACyB,MAAxB;AACH,CALD;;AAOA5B,YAAY,CAACY,SAAb,CAAuBkB,WAAvB,GAAqC,UAAUtB,KAAV,EAAiB;EAClD,IAAIoB,MAAM,GAAG,CAAb;;EAEA,OAAO,CAACpB,KAAK,GAAG,UAAT,MAAyB,CAAhC,EAAmC;IAC/B,KAAKK,UAAL,CAAiBL,KAAK,GAAG,IAAT,GAAiB,IAAjC;IACAA,KAAK,MAAM,CAAX;IACAoB,MAAM;EACT;;EAED,KAAKf,UAAL,CAAgBL,KAAK,GAAG,IAAxB;EAEA,OAAOoB,MAAP;AACH,CAZD;;AAcA5B,YAAY,CAACY,SAAb,CAAuBF,UAAvB,GAAoC,UAAUT,IAAV,EAAgB;EAChD,IAAI,KAAKE,MAAL,CAAYyB,MAAZ,GAAqB,KAAKvB,QAAL,GAAgBJ,IAAzC,EAA+C;IAC3C,IAAI,KAAKC,WAAT,EAAsB;MAClB,IAAI6B,UAAU,GAAG,IAAI3B,MAAJ,CAAW,KAAKC,QAAL,GAAgBJ,IAA3B,CAAjB;MACA,KAAKE,MAAL,CAAY0B,IAAZ,CAAiBE,UAAjB,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,KAAK5B,MAAL,CAAYyB,MAA/C;MACA,KAAKzB,MAAL,GAAc4B,UAAd;IACH,CAJD,MAKK;MACD,MAAM,IAAIC,UAAJ,CAAe,oBAAf,CAAN;IACH;EACJ;AACJ,CAXD"},"metadata":{},"sourceType":"script"}