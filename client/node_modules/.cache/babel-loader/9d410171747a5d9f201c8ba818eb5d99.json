{"ast":null,"code":"var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __markAsModule = target => __defProp(target, \"__esModule\", {\n  value: true\n});\n\nvar __export = (target, all) => {\n  __markAsModule(target);\n\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\n\nvar __reExport = (target, module2, desc) => {\n  if (module2 && typeof module2 === \"object\" || typeof module2 === \"function\") {\n    for (let key of __getOwnPropNames(module2)) if (!__hasOwnProp.call(target, key) && key !== \"default\") __defProp(target, key, {\n      get: () => module2[key],\n      enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable\n    });\n  }\n\n  return target;\n};\n\nvar __toModule = module2 => {\n  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, \"default\", module2 && module2.__esModule && \"default\" in module2 ? {\n    get: () => module2.default,\n    enumerable: true\n  } : {\n    value: module2,\n    enumerable: true\n  })), module2);\n};\n\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n  return value;\n};\n\n__export(exports, {\n  RelationshipType: () => RelationshipType,\n  default: () => foreign_key_constraint_error_default\n});\n\nvar import_database_error = __toModule(require(\"../database-error\"));\n\nvar RelationshipType = /* @__PURE__ */(RelationshipType2 => {\n  RelationshipType2[\"parent\"] = \"parent\";\n  RelationshipType2[\"child\"] = \"child\";\n  return RelationshipType2;\n})(RelationshipType || {});\n\nclass ForeignKeyConstraintError extends import_database_error.default {\n  constructor(options) {\n    options = options || {};\n    options.parent = options.parent || {\n      sql: \"\",\n      name: \"\",\n      message: \"\"\n    };\n    super(options.parent, {\n      stack: options.stack\n    });\n\n    __publicField(this, \"table\");\n\n    __publicField(this, \"fields\");\n\n    __publicField(this, \"value\");\n\n    __publicField(this, \"index\");\n\n    __publicField(this, \"reltype\");\n\n    this.name = \"SequelizeForeignKeyConstraintError\";\n    this.message = options.message || options.parent.message || \"Database Error\";\n    this.fields = options.fields;\n    this.table = options.table;\n    this.value = options.value;\n    this.index = options.index;\n    this.reltype = options.reltype;\n  }\n\n}\n\nvar foreign_key_constraint_error_default = ForeignKeyConstraintError;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA;EAAAC;EAAAC;AAAA;;AAAA,4BAA4DC,wCAA5D;;AAEO,IAAKF,mBAAL,gBAAKG,iBAAL;EACLA,8BAAS,QAAT;EACAA,6BAAQ,OAAR;EAFU;AAAA,CAAL,EAAKH,sBAAL;;AAgBP,wCAAwCI,6BAAxC,CAAsD;EAOpDC,YACEC,OADF,EAEE;IACAA,UAAUA,WAAW,EAArB;IACAA,QAAQC,MAAR,GAAiBD,QAAQC,MAAR,IAAkB;MAAEC,KAAK,EAAP;MAAWC,MAAM,EAAjB;MAAqBC,SAAS;IAA9B,CAAnC;IAEA,MAAMJ,QAAQC,MAAd,EAAsB;MAAEI,OAAOL,QAAQK;IAAjB,CAAtB;;IAZFC;;IACAA;;IACAA;;IACAA;;IACAA;;IASE,KAAKH,IAAL,GAAY,oCAAZ;IAEA,KAAKC,OAAL,GACEJ,QAAQI,OAAR,IAAmBJ,QAAQC,MAAR,CAAeG,OAAlC,IAA6C,gBAD/C;IAEA,KAAKG,MAAL,GAAcP,QAAQO,MAAtB;IACA,KAAKC,KAAL,GAAaR,QAAQQ,KAArB;IACA,KAAKC,KAAL,GAAaT,QAAQS,KAArB;IACA,KAAKC,KAAL,GAAaV,QAAQU,KAArB;IACA,KAAKC,OAAL,GAAeX,QAAQW,OAAvB;EAAuB;;AAtB2B;;AA0BtD,IAAOC,uCAAQC,yBAAf","names":["__export","RelationshipType","default","__toModule","RelationshipType2","import_database_error","constructor","options","parent","sql","name","message","stack","__publicField","fields","table","value","index","reltype","foreign_key_constraint_error_default","ForeignKeyConstraintError"],"sources":["/Users/aurele/node_modules/sequelize/src/errors/database/foreign-key-constraint-error.ts"],"sourcesContent":["import DatabaseError, { DatabaseErrorSubclassOptions } from '../database-error';\n\nexport enum RelationshipType {\n  parent = 'parent',\n  child = 'child',\n}\n\ninterface ForeignKeyConstraintErrorOptions {\n  table?: string;\n  fields?: { [field: string]: string };\n  value?: unknown;\n  index?: string;\n  reltype?: RelationshipType;\n}\n\n/**\n * Thrown when a foreign key constraint is violated in the database\n */\nclass ForeignKeyConstraintError extends DatabaseError {\n  table: string | undefined;\n  fields: { [field: string]: string } | undefined;\n  value: unknown;\n  index: string | undefined;\n  reltype: RelationshipType | undefined;\n\n  constructor(\n    options: ForeignKeyConstraintErrorOptions & DatabaseErrorSubclassOptions\n  ) {\n    options = options || {};\n    options.parent = options.parent || { sql: '', name: '', message: '' };\n\n    super(options.parent, { stack: options.stack });\n    this.name = 'SequelizeForeignKeyConstraintError';\n\n    this.message =\n      options.message || options.parent.message || 'Database Error';\n    this.fields = options.fields;\n    this.table = options.table;\n    this.value = options.value;\n    this.index = options.index;\n    this.reltype = options.reltype;\n  }\n}\n\nexport default ForeignKeyConstraintError;\n"]},"metadata":{},"sourceType":"script"}