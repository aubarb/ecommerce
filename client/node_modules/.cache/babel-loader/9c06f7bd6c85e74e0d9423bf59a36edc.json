{"ast":null,"code":"'use strict'; // map types from key to human-friendly name\n\nexports.name = new Map([['0', 'File'], // same as File\n['', 'OldFile'], ['1', 'Link'], ['2', 'SymbolicLink'], // Devices and FIFOs aren't fully supported\n// they are parsed, but skipped when unpacking\n['3', 'CharacterDevice'], ['4', 'BlockDevice'], ['5', 'Directory'], ['6', 'FIFO'], // same as File\n['7', 'ContiguousFile'], // pax headers\n['g', 'GlobalExtendedHeader'], ['x', 'ExtendedHeader'], // vendor-specific stuff\n// skip\n['A', 'SolarisACL'], // like 5, but with data, which should be skipped\n['D', 'GNUDumpDir'], // metadata only, skip\n['I', 'Inode'], // data = link path of next file\n['K', 'NextFileHasLongLinkpath'], // data = path of next file\n['L', 'NextFileHasLongPath'], // skip\n['M', 'ContinuationFile'], // like L\n['N', 'OldGnuLongPath'], // skip\n['S', 'SparseFile'], // skip\n['V', 'TapeVolumeHeader'], // like x\n['X', 'OldExtendedHeader']]); // map the other direction\n\nexports.code = new Map(Array.from(exports.name).map(kv => [kv[1], kv[0]]));","map":{"version":3,"names":["exports","name","Map","code","Array","from","map","kv"],"sources":["/Users/aurele/Desktop/E-Commerce App/views/node_modules/tar/lib/types.js"],"sourcesContent":["'use strict'\n// map types from key to human-friendly name\nexports.name = new Map([\n  ['0', 'File'],\n  // same as File\n  ['', 'OldFile'],\n  ['1', 'Link'],\n  ['2', 'SymbolicLink'],\n  // Devices and FIFOs aren't fully supported\n  // they are parsed, but skipped when unpacking\n  ['3', 'CharacterDevice'],\n  ['4', 'BlockDevice'],\n  ['5', 'Directory'],\n  ['6', 'FIFO'],\n  // same as File\n  ['7', 'ContiguousFile'],\n  // pax headers\n  ['g', 'GlobalExtendedHeader'],\n  ['x', 'ExtendedHeader'],\n  // vendor-specific stuff\n  // skip\n  ['A', 'SolarisACL'],\n  // like 5, but with data, which should be skipped\n  ['D', 'GNUDumpDir'],\n  // metadata only, skip\n  ['I', 'Inode'],\n  // data = link path of next file\n  ['K', 'NextFileHasLongLinkpath'],\n  // data = path of next file\n  ['L', 'NextFileHasLongPath'],\n  // skip\n  ['M', 'ContinuationFile'],\n  // like L\n  ['N', 'OldGnuLongPath'],\n  // skip\n  ['S', 'SparseFile'],\n  // skip\n  ['V', 'TapeVolumeHeader'],\n  // like x\n  ['X', 'OldExtendedHeader'],\n])\n\n// map the other direction\nexports.code = new Map(Array.from(exports.name).map(kv => [kv[1], kv[0]]))\n"],"mappings":"AAAA,a,CACA;;AACAA,OAAO,CAACC,IAAR,GAAe,IAAIC,GAAJ,CAAQ,CACrB,CAAC,GAAD,EAAM,MAAN,CADqB,EAErB;AACA,CAAC,EAAD,EAAK,SAAL,CAHqB,EAIrB,CAAC,GAAD,EAAM,MAAN,CAJqB,EAKrB,CAAC,GAAD,EAAM,cAAN,CALqB,EAMrB;AACA;AACA,CAAC,GAAD,EAAM,iBAAN,CARqB,EASrB,CAAC,GAAD,EAAM,aAAN,CATqB,EAUrB,CAAC,GAAD,EAAM,WAAN,CAVqB,EAWrB,CAAC,GAAD,EAAM,MAAN,CAXqB,EAYrB;AACA,CAAC,GAAD,EAAM,gBAAN,CAbqB,EAcrB;AACA,CAAC,GAAD,EAAM,sBAAN,CAfqB,EAgBrB,CAAC,GAAD,EAAM,gBAAN,CAhBqB,EAiBrB;AACA;AACA,CAAC,GAAD,EAAM,YAAN,CAnBqB,EAoBrB;AACA,CAAC,GAAD,EAAM,YAAN,CArBqB,EAsBrB;AACA,CAAC,GAAD,EAAM,OAAN,CAvBqB,EAwBrB;AACA,CAAC,GAAD,EAAM,yBAAN,CAzBqB,EA0BrB;AACA,CAAC,GAAD,EAAM,qBAAN,CA3BqB,EA4BrB;AACA,CAAC,GAAD,EAAM,kBAAN,CA7BqB,EA8BrB;AACA,CAAC,GAAD,EAAM,gBAAN,CA/BqB,EAgCrB;AACA,CAAC,GAAD,EAAM,YAAN,CAjCqB,EAkCrB;AACA,CAAC,GAAD,EAAM,kBAAN,CAnCqB,EAoCrB;AACA,CAAC,GAAD,EAAM,mBAAN,CArCqB,CAAR,CAAf,C,CAwCA;;AACAF,OAAO,CAACG,IAAR,GAAe,IAAID,GAAJ,CAAQE,KAAK,CAACC,IAAN,CAAWL,OAAO,CAACC,IAAnB,EAAyBK,GAAzB,CAA6BC,EAAE,IAAI,CAACA,EAAE,CAAC,CAAD,CAAH,EAAQA,EAAE,CAAC,CAAD,CAAV,CAAnC,CAAR,CAAf"},"metadata":{},"sourceType":"script"}